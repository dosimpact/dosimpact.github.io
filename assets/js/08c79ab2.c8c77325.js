"use strict";(self.webpackChunkdosimpact_blog=self.webpackChunkdosimpact_blog||[]).push([[46189],{3905:(e,n,r)=>{r.d(n,{Zo:()=>a,kt:()=>f});var o=r(67294);function t(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function c(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,o)}return r}function s(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?c(Object(r),!0).forEach((function(n){t(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function d(e,n){if(null==e)return{};var r,o,t=function(e,n){if(null==e)return{};var r,o,t={},c=Object.keys(e);for(o=0;o<c.length;o++)r=c[o],n.indexOf(r)>=0||(t[r]=e[r]);return t}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(o=0;o<c.length;o++)r=c[o],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(t[r]=e[r])}return t}var i=o.createContext({}),l=function(e){var n=o.useContext(i),r=n;return e&&(r="function"==typeof e?e(n):s(s({},n),e)),r},a=function(e){var n=l(e.components);return o.createElement(i.Provider,{value:n},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},m=o.forwardRef((function(e,n){var r=e.components,t=e.mdxType,c=e.originalType,i=e.parentName,a=d(e,["components","mdxType","originalType","parentName"]),p=l(r),m=t,f=p["".concat(i,".").concat(m)]||p[m]||u[m]||c;return r?o.createElement(f,s(s({ref:n},a),{},{components:r})):o.createElement(f,s({ref:n},a))}));function f(e,n){var r=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var c=r.length,s=new Array(c);s[0]=m;var d={};for(var i in n)hasOwnProperty.call(n,i)&&(d[i]=n[i]);d.originalType=e,d[p]="string"==typeof e?e:t,s[1]=d;for(var l=2;l<c;l++)s[l]=r[l];return o.createElement.apply(null,s)}return o.createElement.apply(null,r)}m.displayName="MDXCreateElement"},240:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>s,default:()=>u,frontMatter:()=>c,metadata:()=>d,toc:()=>l});var o=r(87462),t=(r(67294),r(3905));const c={sidebar_position:8},s="Redis Cluster",d={unversionedId:"g-devops/docker/docker-template/dt8-redis",id:"g-devops/docker/docker-template/dt8-redis",title:"Redis Cluster",description:"docker-compose.yml",source:"@site/docs/g-devops/1-docker/2-docker-template/dt8-redis.md",sourceDirName:"g-devops/1-docker/2-docker-template",slug:"/g-devops/docker/docker-template/dt8-redis",permalink:"/docs/g-devops/docker/docker-template/dt8-redis",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/g-devops/1-docker/2-docker-template/dt8-redis.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"devOps",previous:{title:"Docker Compose:Template",permalink:"/docs/g-devops/docker/docker-template/dt1-templates"},next:{title:"Docker & Node.js",permalink:"/docs/g-devops/docker/docker-template/dt9-node"}},i={},l=[{value:"docker-compose.yml",id:"docker-composeyml",level:2},{value:"conf",id:"conf",level:2}],a={toc:l},p="wrapper";function u(e){let{components:n,...r}=e;return(0,t.kt)(p,(0,o.Z)({},a,r,{components:n,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"redis-cluster"},"Redis Cluster"),(0,t.kt)("h2",{id:"docker-composeyml"},"docker-compose.yml"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-yml"},'# docker-compose.yml\n# docker compose up -d  \nversion: "3.7"\nservices:\n  node1:\n    container_name: node1\n    image: redis\n    volumes:\n      - ./cluster/node01.conf:/etc/redis/redis.conf\n    command: redis-server /etc/redis/redis.conf\n    ports:\n      - 7001:7001\n      - 7002:7002\n      - 7003:7003\n      - 7004:7004\n      - 7005:7005\n      - 7006:7006\n  node2:\n    network_mode: "service:node1"\n    container_name: node2\n    image: redis\n    volumes:\n      - ./cluster/node02.conf:/etc/redis/redis.conf\n    command: redis-server /etc/redis/redis.conf\n\n  node3:\n    network_mode: "service:node1"\n    container_name: node3\n    image: redis\n    volumes:\n      - ./cluster/node03.conf:/etc/redis/redis.conf\n    command: redis-server /etc/redis/redis.conf\n\n  node4:\n    network_mode: "service:node1"\n    container_name: node4\n    image: redis\n    volumes:\n      - ./cluster/node04.conf:/etc/redis/redis.conf\n    command: redis-server /etc/redis/redis.conf\n\n  node5:\n    network_mode: "service:node1"\n    container_name: node5\n    image: redis\n    volumes:\n      - ./cluster/node05.conf:/etc/redis/redis.conf\n    command: redis-server /etc/redis/redis.conf\n\n  node6:\n    network_mode: "service:node1"\n    container_name: node6\n    image: redis\n    volumes:\n      - ./cluster/node06.conf:/etc/redis/redis.conf\n    command: redis-server /etc/redis/redis.conf\n\n  redis-cluster-entry:\n    network_mode: "service:node1"\n    image: redis\n    container_name: redis-cluster\n    command: redis-cli --cluster create 127.0.0.1:7001 127.0.0.1:7002 127.0.0.1:7003 127.0.0.1:7004 127.0.0.1:7005 127.0.0.1:7006 --cluster-replicas 1 --cluster-yes\n    depends_on:\n      - node1\n      - node2\n      - node3\n      - node4\n      - node5\n      - node6\n# docker compose up\n\n\n')),(0,t.kt)("h2",{id:"conf"},"conf"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-yml"},"# ./cluster/node01.conf\nport 7001\n#cluster \uc0ac\uc6a9 \uc5ec\ubd80\ncluster-enabled yes \n#cluster \uc124\uc815 \ud30c\uc77c \uc774\ub984\ncluster-config-file nodes.conf \n#timeout \uc2dc\uac04 \uc9c0\uc815 (ms)\ncluster-node-timeout 3000\n#failover\ub41c redis node \uc7ac\uc2e4\ud589 \uc2dc \uc774\uc804 \ub370\uc774\ud130\ub97c \ub2e4\uc2dc \ub85c\ub4dc\ud574\uc62c \uc218 \uc788\uc74c\nappendonly yes\n---\n# ./cluster/node02.conf\nport 7002\ncluster-enabled yes\ncluster-config-file nodes.conf\ncluster-node-timeout 3000\nappendonly yes\n---\n# ./cluster/node03.conf\nport 7003\ncluster-enabled yes\ncluster-config-file nodes.conf\ncluster-node-timeout 3000\nappendonly yes\n---\n# ./cluster/node04.conf\nport 7004\ncluster-enabled yes\ncluster-config-file nodes.conf\ncluster-node-timeout 3000\nappendonly yes\n---\n# ./cluster/node05.conf\nport 7005\ncluster-enabled yes\ncluster-config-file nodes.conf\ncluster-node-timeout 3000\nappendonly yes\n---\n# ./cluster/node06.conf\nport 7006\ncluster-enabled yes\ncluster-config-file nodes.conf\ncluster-node-timeout 3000\nappendonly yes\n")))}u.isMDXComponent=!0}}]);