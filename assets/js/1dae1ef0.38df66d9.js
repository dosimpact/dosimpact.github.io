"use strict";(self.webpackChunkdosimpact_blog=self.webpackChunkdosimpact_blog||[]).push([[98648],{3905:(e,n,r)=>{r.d(n,{Zo:()=>p,kt:()=>m});var t=r(67294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function c(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function a(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?c(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function d(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},c=Object.keys(e);for(t=0;t<c.length;t++)r=c[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(t=0;t<c.length;t++)r=c[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=t.createContext({}),s=function(e){var n=t.useContext(i),r=n;return e&&(r="function"==typeof e?e(n):a(a({},n),e)),r},p=function(e){var n=s(e.components);return t.createElement(i.Provider,{value:n},e.children)},k="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},l=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,c=e.originalType,i=e.parentName,p=d(e,["components","mdxType","originalType","parentName"]),k=s(r),l=o,m=k["".concat(i,".").concat(l)]||k[l]||u[l]||c;return r?t.createElement(m,a(a({ref:n},p),{},{components:r})):t.createElement(m,a({ref:n},p))}));function m(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var c=r.length,a=new Array(c);a[0]=l;var d={};for(var i in n)hasOwnProperty.call(n,i)&&(d[i]=n[i]);d.originalType=e,d[k]="string"==typeof e?e:o,a[1]=d;for(var s=2;s<c;s++)a[s]=r[s];return t.createElement.apply(null,a)}return t.createElement.apply(null,r)}l.displayName="MDXCreateElement"},36397:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>u,frontMatter:()=>c,metadata:()=>d,toc:()=>s});var t=r(87462),o=(r(67294),r(3905));const c={sidebar_position:2},a="Docker Command",d={unversionedId:"g-devops/docker/docker-basic/docker-2-command",id:"g-devops/docker/docker-basic/docker-2-command",title:"Docker Command",description:"",source:"@site/docs/g-devops/1-docker/1-docker-basic/docker-2-command.md",sourceDirName:"g-devops/1-docker/1-docker-basic",slug:"/g-devops/docker/docker-basic/docker-2-command",permalink:"/docs/g-devops/docker/docker-basic/docker-2-command",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/g-devops/1-docker/1-docker-basic/docker-2-command.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"devOps",previous:{title:"Docker",permalink:"/docs/g-devops/docker/docker-basic/sp001"},next:{title:"Docker File",permalink:"/docs/g-devops/docker/docker-basic/docker-2-file"}},i={},s=[],p={toc:s},k="wrapper";function u(e){let{components:n,...r}=e;return(0,o.kt)(k,(0,t.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"docker-command"},"Docker Command"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-md"},'## \ubc84\uc804 \ud655\uc778 \ubc0f \ud5ec\ub85c \uc6d4\ub4dc\n\ndocker version\ndocker -v\ndocker run hello-world\n\n\n# \uc774\ubbf8\uc9c0\n\ndocker image ls # \uc774\ubbf8\uc9c0\ub9ac\uc2a4\ud2b8 \ucd9c\ub825\ndocker system df # \uc774\ubbf8\uc9c0 \ubc0f \ub514\uc2a4\ud06c \uc0ac\uc6a9\ub7c9\ndocker image inspect nginx # \uc774\ubbf8\uc9c0 \uc815\ubcf4 \ucd9c\ub825\n\ndocker pull ubuntu # \uac00\uc838\uc624\uae30\ndocker push <\uc0ac\uc6a9\uc790\uc774\ub984>/<\uc774\ubbf8\uc9c0\uc774\ub984>:<\ud0dc\uadf8> # \uc774\ubbf8\uc9c0 \ud478\uc26c ( \uc774\ubbf8\uc9c0 \uc774\ub984 \uc785\ub825 )\n\ndocker search python #\uac80\uc0c9\ndocker image prune # \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub294 \ubaa8\ub4e0 image \uc0ad\uc81c\ndocker image rm nginx # \uc81c\uac70\ndocker rim \uc774\ubbf8\uc9c0 \uc544\uc774\ub514 # \uc81c\uac70\ndocker image rm -f $(docker image ls -q)  #  \ubaa8\ub4e0 \uc774\ubbf8\uc9c0 \uc81c\uac70\n\n\n# \ud604\uc7ac \uc2e4\ud589\uc911\uc778 \ucee8\ud14c\uc774\ub108 \ubc0f \ubaa8\ub4e0 \ucee8\ud14c\uc774\ub108\n\ndocker ps\ndocker ps -a ( docker container ps -a \uc904\uc784\ub9d0 )\n\n\n\n\n\n# \ucee8\ud14c\uc774\ub108 ( nginx | centos | \uc6b0\ubd84\ud22c \uc2e4\ud589 )\n\n-d \ubc31\uadf8\ub77c\uc6b4\ub4dc \uc2e4\ud589 ( \uc0dd\uc131 \uc635\uc158 | \ub3c4\ucee4 \uc2dc\uc791\ud558\uace0, \ud544\uc694\ud558\ub2e4\uba74 attach\ub85c bash \ub4e4\uc5b4\uac00\ub294 \ubc29\ubc95)\n-a attach\ub3c4 \uac19\uc774 \ud55c\ub2e4.\n-p \ud3ec\ud2b8\uc124\uc815 ( \uae30\ubcf8 \ub85c\uadf8 \ucd9c\ub825\uc5d0\ub2e4, cmd \uc0c1\uc73c\ub85c\ub3c4 \uc785\ucd9c\ub825\uc744 \uc5f0\uacb0\ud558\ub294\ub4ef , \uc0dd\uc131 \uc635\uc158 <\uc678\ubd80>:<\ub0b4\ubd80>)\n-it \uc778\ud130\ub809\ud2f0\ube0c \ud130\ubbf8\ub110 ( -i (input pipe) , -t ( TTY support ) )\n    \u2022 https://stackoverflow.com/questions/43099116/error-the-input-device-is-not-a-tty \n-e \ud658\uacbd\ubcc0\uc218 \uc124\uc815 \uc2e4\ud589 ( \uc0dd\uc131 \uc635\uc158 )\n--rm \ucee8\ud14c\uc774\ub108 \uc2e4\ud589 \ud6c4 \uc885\ub8cc\uc2dc \ubc14\ub85c \uc0ad\uc81c\n--name \ucee8\ud14c\uc774\ub108 \uc774\ub984 \uc124\uc815\n\n    eg) 1\ud68c\uc6a9\n        docker run --rm -it --name node_web node:16 bash\n    eg) \ubc31\uadf8\ub77c\uc6b4\ub4dc \ub7ec\ub2dd\n        docker run -itd --name node_web node:16 \n        \n\ndocker pull nginx #\uc774\ubbf8\uc9c0 \ub2e4\uc6b4\ndocker image ls #\ud655\uc778\ndocker container rename webserver nginxserver # \ucee8\ud14c\uc774\ub108 \uc774\ub984 \ubcc0\uacbd\n\n\ndocker run | create | start | stop | kill <dockerImageName> <command>\n*run = create && start \uc774\ub2e4.\n*kill \ubc14\ub85c \uc885\ub8cc, stop \uc740 \uc791\uc5c5\uc911\uc778\uac83 \ub9c8\uc838 \ud558\uace0 \uc885\ub8cc\n\n---nginx\ndocker run --name webserver -d -p 6080:80 nginx # \ucee8\ud14c\uc774\ub108 \uc0dd\uc131 \ubc0f \uc2e4\ud589\ndocker start webserver # \ucee8\ud14c\uc774\ub108 \uc2e4\ud589 ( \uc774\ubbf8 \ub9cc\ub4e4\uc5b4\uc9c4 )\ndocker stop webserver # \ucee8\ud14c\uc774\ub108 \uc911\uc9c0\ndocker rm webserver  # \ucee8\ud14c\uc774\ub108 \uc0ad\uc81c\n\n\n---centos\ndocker container run -it --name "test1" centos /bin/cal\n\ndocker run -it --name "test2" centos /bin/bash\n\n\n---ubuntu\ndocker container run ubuntu:lastest /bin/echo \'hello world\'\n\ndocker container run -it --name "ubuntush" ubuntu bash\n\ndocker run -itd --name ubsh ubuntu bash\n\n\n# \ucee8\ud14c\uc774\ub108 all rm\n\ndocker rm `docker ps -aq `\n\n\n# \ucee8\ud14c\uc774\ub108 rename\ndocker rename origin_name chagned_name\n\n\n# \ucee8\ud14c\uc774\ub108 attach detac\u3139h\n\ndocker start|stop NAME\ndocker attach\n\ucee8\ud2b8\ub864P,\ucee8\ud2b8\ub864Q > \ube60\uc838\ub098\uc624\uae30\n\ndocker logs [ container ID ]\n\n\n# \ucee8\ud14c\uc774\ub108 exec\n*\ucee8\ud14c\uc774\ub108\uc5d0 \uba85\ub839\uc5b4 \uc804\ub2ec\ud558\uae30\ndocker exec -it ub /bin/cat /etc/hosts\ndocker exec -it ub /bin/echo "hello"\n\n*\ub3c4\ucee4 \uc258 \uc2e4\ud589\ud558\uae30\ndocker exec -it postgres /bin/bash\n\neg) docker exec -it redis_back redis-cli -a password\n>ping\n\n\n# \ucee8\ud14c\uc774\ub108 update\n\n# docker update --restart=always <container> \ndocker update --restart=always TestContainer\n\n# \ucee8\ud14c\uc774\ub108 port\n\ndocker port test2 #  80/tcp -> 0.0.0.0:4444 \ud3ec\ud2b8 \uc815\ubcf4 \ucd9c\ub825\ub41c\ub2e4. ( -p 4444:80 \uc5f0\uacb0\ub41c \ubaa8\uc2b5 )\n\n# \ucee8\ud14c\uc774\ub108 cp:file copy\n\ndocker cp ./a.txt  origin:/  # \uba85\ub839\uc5b4 : docker cp [\ud074\ub77c\uc774\uc5b8\ud2b8 path]   [\ucee8\ud14c\uc774\ub108]:[path]\ndocker cp origin:/a.txt   ./  # \ubc18\ub300\ub85c\ub3c4 \uac00\ub2a5\n\n\n# \uc815\ub9ac\ndocker system prune # \uc0ac\uc6a9\ud558\uc9c0\uc54a\ub294 \ucee8\ud14c\uc774\ub108,\uc774\ubbf8\uc9c0,\ub124\ud2b8\uc6cc\ud06c \uc81c\uac70\n    - disk \uc6a9\ub7c9 \uc624\ub958\uac00 \ubc1c\uc0dd\ud560 \ub54c,\n\n\n# \ub85c\uadf8\uc778\n\ndocker login\ndocker logout\n\n\n# \uc774\ubbf8\uc9c0 \ube4c\ub4dc\n\n# \uc774\ubbf8\uc9c0 \uc774\ub984\uc758 \uad00\ud589 <\uc800\uc7a5\uc18c\uc774\ub984>/<\uc774\ubbf8\uc9c0\uc774\ub984>:\ubc84\uc804\n\ndocker build -t ehdudtkatka/blockcrawl:0.2 .\ndocker run -it -p 3001:80 --name webserver_2 webserver_2:0.0.1\n\n# \uc774\ubbf8\uc9c0 Push \n\ndocker tag blockcrawl_back:0.2 ehdudtkatka/blockcrawl:0.2 # \uc774\ubbf8\uc9c0 \uc774\ub984\uc5d0 \ub0b4 \uc544\uc774\ub514\uac00 \ub4e4\uc5b4\uac00\ub3c4\ub85d \ubc14\uafb8\uc5b4\uc57c\ud55c\ub2e4.\ndocker push ehdudtkatka/blockcrawl:0.2 # \uadf8\ub9ac\uace0 push\n\n\nhttps://www.lainyzine.com/ko/article/how-to-remove-all-docker-contaniers-and-images/\n')))}u.isMDXComponent=!0}}]);