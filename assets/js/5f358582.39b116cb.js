"use strict";(self.webpackChunkdosimpact_blog=self.webpackChunkdosimpact_blog||[]).push([[26752],{3905:(e,n,a)=>{a.d(n,{Zo:()=>A,kt:()=>f});var r=a(67294);function t(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function o(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?o(Object(a),!0).forEach((function(n){t(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function k(e,n){if(null==e)return{};var a,r,t=function(e,n){if(null==e)return{};var a,r,t={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],n.indexOf(a)>=0||(t[a]=e[a]);return t}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(t[a]=e[a])}return t}var i=r.createContext({}),_=function(e){var n=r.useContext(i),a=n;return e&&(a="function"==typeof e?e(n):s(s({},n),e)),a},A=function(e){var n=_(e.components);return r.createElement(i.Provider,{value:n},e.children)},E="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},T=r.forwardRef((function(e,n){var a=e.components,t=e.mdxType,o=e.originalType,i=e.parentName,A=k(e,["components","mdxType","originalType","parentName"]),E=_(a),T=t,f=E["".concat(i,".").concat(T)]||E[T]||c[T]||o;return a?r.createElement(f,s(s({ref:n},A),{},{components:a})):r.createElement(f,s({ref:n},A))}));function f(e,n){var a=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var o=a.length,s=new Array(o);s[0]=T;var k={};for(var i in n)hasOwnProperty.call(n,i)&&(k[i]=n[i]);k.originalType=e,k[E]="string"==typeof e?e:t,s[1]=k;for(var _=2;_<o;_++)s[_]=a[_];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}T.displayName="MDXCreateElement"},19402:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>i,contentTitle:()=>s,default:()=>c,frontMatter:()=>o,metadata:()=>k,toc:()=>_});var r=a(87462),t=(a(67294),a(3905));const o={sidebar_position:3},s="kafka install with docker",k={unversionedId:"g-be/kafka/ka003",id:"g-be/kafka/ka003",title:"kafka install with docker",description:"single",source:"@site/docs/g-be/3-kafka/ka003.md",sourceDirName:"g-be/3-kafka",slug:"/g-be/kafka/ka003",permalink:"/docs/g-be/kafka/ka003",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/g-be/3-kafka/ka003.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"backEnd",previous:{title:"\uac1c\ubc1c\uc790\uc640 \ud611\uc5c5\uc744 \uc704\ud55c kafka\uc758 \ud575\uc2ec \uac1c\ub150 2",permalink:"/docs/g-be/kafka/ka002"},next:{title:"\ucd08\ubcf4\uc790\ub97c \uc704\ud55c kafka-3 CLI",permalink:"/docs/g-be/kafka/ka004"}},i={},_=[{value:"single",id:"single",level:2},{value:"cluster",id:"cluster",level:2},{value:"kafka CLI",id:"kafka-cli",level:2},{value:"simple test",id:"simple-test",level:3},{value:"ref",id:"ref",level:2}],A={toc:_},E="wrapper";function c(e){let{components:n,...a}=e;return(0,t.kt)(E,(0,r.Z)({},A,a,{components:n,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"kafka-install-with-docker"},"kafka install with docker"),(0,t.kt)("h2",{id:"single"},"single"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-yml"},"networks:\n  kafka_network:\n\nvolumes:\n  Kafka00_Standalone:\n    driver: local\n\nservices:\n  Kafka00Service:\n    image: bitnami/kafka:3.5.1-debian-11-r72\n    restart: always\n    container_name: Kafka00Container\n    ports:\n      - '9094:9094'\n    environment:\n      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true\n      # KRaft settings\n      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@Kafka00Service:9093\n      - KAFKA_CFG_NODE_ID=0\n      - KAFKA_CFG_PROCESS_ROLES=controller,broker\n      # Listeners\n      - ALLOW_PLAINTEXT_LISTENER=yes\n      # \ud504\ub85c\ub4c0\uc2a4\ub098 \ucee8\uc288\uba38\uc5d0 \uc81c\uacf5\ud560 \uc8fc\uc18c, \ub85c\uceec PC\uc5d0\uc11c \uc811\uadfc\ud560 \ub54c 127.0.0.1:10000 \ub97c \uc774\uc6a9\ud55c\ub2e4\n      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094\n      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://Kafka00Service:9092,EXTERNAL://127.0.0.1:9094\n      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT\n      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER\n      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT\n    networks:\n      - kafka_network\n    volumes:\n      - \"Kafka00_Standalone:/bitnami/kafka\"\n  \n  KafkaWebUiService:\n    image: provectuslabs/kafka-ui:latest\n    restart: always\n    container_name: KafkaWebUiContainer\n    ports:\n      - '8080:8080'\n    environment:\n      - KAFKA_CLUSTERS_0_NAME=Kafka-V35\n      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=Kafka00Service:9092\n      - DYNAMIC_CONFIG_ENABLED=true\n      - KAFKA_CLUSTERS_0_AUDIT_TOPICAUDITENABLED=true\n      - KAFKA_CLUSTERS_0_AUDIT_CONSOLEAUDITENABLED=true\n      #- KAFKA_CLUSTERS_0_METRICS_PORT=9999\n    networks:\n      - kafka_network\n\n# ref : Docker Compose \ub85c Silicon Mac\uc5d0\uc11c KRaft, Kafka Cluster \uad6c\ucd95\ud558\uae30\n# https://breezymind.com/silicon-mac-kafka-cluster-docker-compose/\n\n")),(0,t.kt)("h2",{id:"cluster"},"cluster"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-yml"},"networks:\n  kafka_network:\n\nvolumes:\n  Kafka00:\n    driver: local\n  Kafka01:\n    driver: local\n  Kafka02:\n    driver: local\n    \nservices:\n##Kafka 00    \n  Kafka00Service:\n    image: bitnami/kafka:3.5.1-debian-11-r72\n    restart: unless-stopped\n    container_name: Kafka00Container\n    ports:\n      - '10000:9094'\n    environment:\n      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true\n      # KRaft settings\n      - KAFKA_CFG_BROKER_ID=0\n      - KAFKA_CFG_NODE_ID=0\n      # KRAFT_CLUSTER_ID \uc124\uc815\uc73c\ub85c \ubaa8\ub4e0 \ube0c\ub85c\ucee4\uac00 \ub3d9\uc77c\ud55c ID\ub97c \uac00\uc9c4\ub2e4\n      - KAFKA_KRAFT_CLUSTER_ID=HsDBs9l6UUmQq7Y5E6bNlw\n      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@Kafka00Service:9093,1@Kafka01Service:9093,2@Kafka02Service:9093\n      - KAFKA_CFG_PROCESS_ROLES=controller,broker\n      # Listeners\n      - ALLOW_PLAINTEXT_LISTENER=yes\n      # \ube0c\ub85c\ucee4\uac00 \ub0b4\ubd80\uc801\uc73c\ub85c \ud1b5\uc2e0\ud558\ub294 \uc8fc\uc18c\n      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094\n      # \ud504\ub85c\ub4c0\uc2a4\ub098 \ucee8\uc288\uba38\uc5d0 \uc81c\uacf5\ud560 \uc8fc\uc18c, \ub85c\uceec PC\uc5d0\uc11c \uc811\uadfc\ud560 \ub54c 127.0.0.1:10000 \ub97c \uc774\uc6a9\ud55c\ub2e4\n      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://Kafka00Service:9092,EXTERNAL://127.0.0.1:10000\n      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT\n      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER\n      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT\n      # Clustering\n      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=3\n      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=3\n      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=2\n    networks:\n      - kafka_network\n    volumes:\n      - \"Kafka00:/bitnami/kafka\"\n##Kafka 01\n  Kafka01Service:\n    image: bitnami/kafka:3.5.1-debian-11-r72\n    restart: unless-stopped\n    container_name: Kafka01Container\n    ports:\n      - '10001:9094'\n    environment:\n      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true\n      # KRaft settings\n      - KAFKA_CFG_BROKER_ID=1\n      - KAFKA_CFG_NODE_ID=1\n      - KAFKA_KRAFT_CLUSTER_ID=HsDBs9l6UUmQq7Y5E6bNlw\n      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@Kafka00Service:9093,1@Kafka01Service:9093,2@Kafka02Service:9093\n      - KAFKA_CFG_PROCESS_ROLES=controller,broker\n      # Listeners\n      - ALLOW_PLAINTEXT_LISTENER=yes\n      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094\n      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://Kafka01Service:9092,EXTERNAL://127.0.0.1:10001\n      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT\n      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER\n      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT\n      # Clustering\n      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=3\n      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=3\n      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=2\n    networks:\n      - kafka_network\n    volumes:\n      - \"Kafka01:/bitnami/kafka\"\n##Kafka 02\n  Kafka02Service:\n    image: bitnami/kafka:3.5.1-debian-11-r72\n    restart: unless-stopped\n    container_name: Kafka02Container\n    ports:\n      - '10002:9094'\n    environment:\n      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true\n      # KRaft settings\n      - KAFKA_CFG_BROKER_ID=2\n      - KAFKA_CFG_NODE_ID=2\n      - KAFKA_KRAFT_CLUSTER_ID=HsDBs9l6UUmQq7Y5E6bNlw\n      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@Kafka00Service:9093,1@Kafka01Service:9093,2@Kafka02Service:9093\n      - KAFKA_CFG_PROCESS_ROLES=controller,broker\n      # Listeners\n      - ALLOW_PLAINTEXT_LISTENER=yes\n      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094\n      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://Kafka02Service:9092,EXTERNAL://127.0.0.1:10002\n      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT\n      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER\n      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT\n      # Clustering\n      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=3\n      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=3\n      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=2\n    networks:\n      - kafka_network\n    volumes:\n      - \"Kafka02:/bitnami/kafka\"\n      \n  KafkaWebUiService:\n    image: provectuslabs/kafka-ui:latest\n    restart: unless-stopped\n    container_name: KafkaWebUiContainer\n    ports:\n      - '8080:8080'\n    environment:\n      - KAFKA_CLUSTERS_0_NAME=Local-Kraft-Cluster\n      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=Kafka00Service:9092,Kafka01Service:9092,Kafka02Service:9092\n      - DYNAMIC_CONFIG_ENABLED=true\n      - KAFKA_CLUSTERS_0_AUDIT_TOPICAUDITENABLED=true\n      - KAFKA_CLUSTERS_0_AUDIT_CONSOLEAUDITENABLED=true\n      #- KAFKA_CLUSTERS_0_METRICS_PORT=9999\n    networks:\n      - kafka_network\n\n")),(0,t.kt)("h2",{id:"kafka-cli"},"kafka CLI"),(0,t.kt)("p",null,"\uce74\ud504\uce74 \uc124\uce58 \uacbd\ub85c : /opt/bitnami/kafka\n\uce74\ud504\uce74 CLI \uacbd\ub85c : /opt/bitnami/kafka/bin"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"// \ub3c4\ucee4 \ud658\uacbd\uc774\ubbc0\ub85c, \ub450\uac1c\uc758 \ud130\ubbf8\ub110\ub85c \uac01 \ucee8\ud14c\uc774\ub108\uc5d0 \uc811\uc18d\ud558\uc790.\ndocker exec -it 53e6f8814563b6665440b04c07ccc29eb21674f12daffad68a478984c3f8f1af bash\ndocker exec -it 53e6f8814563b6665440b04c07ccc29eb21674f12daffad68a478984c3f8f1af bash\n\ncd /opt/bitnami/kafka/bin\n\n$ pwd\n/opt/bitnami/kafka/bin\n\n$ ls\nconnect-distributed.sh        kafka-delegation-tokens.sh  kafka-mirror-maker.sh           kafka-verifiable-consumer.sh\nconnect-mirror-maker.sh       kafka-delete-records.sh     kafka-producer-perf-test.sh         kafka-verifiable-producer.sh\nconnect-standalone.sh         kafka-dump-log.sh       kafka-reassign-partitions.sh        trogdor.sh\nkafka-acls.sh             kafka-e2e-latency.sh    kafka-replica-verification.sh       windows\nkafka-broker-api-versions.sh  kafka-features.sh       kafka-run-class.sh              zookeeper-security-migration.sh\nkafka-cluster.sh          kafka-get-offsets.sh    kafka-server-start.sh           zookeeper-server-start.sh\nkafka-configs.sh          kafka-jmx.sh        kafka-server-stop.sh            zookeeper-server-stop.sh\nkafka-console-consumer.sh     kafka-leader-election.sh    kafka-storage.sh            zookeeper-shell.sh\nkafka-console-producer.sh     kafka-log-dirs.sh       kafka-streams-application-reset.sh\nkafka-consumer-groups.sh      kafka-metadata-quorum.sh    kafka-topics.sh\nkafka-consumer-perf-test.sh   kafka-metadata-shell.sh     kafka-transactions.sh\n")),(0,t.kt)("h3",{id:"simple-test"},"simple test"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"// greeting \ud1a0\ud53d \uc0dd\uc131\n./kafka-topics.sh --create --topic greeting --bootstrap-server Kafka00Service:9092,Kafka01Service:9092,Kafka02Service:9092 --partitions 3 --replication-factor 2\n\n// Producer, Consumer \ud14c\uc2a4\ud2b8\n\n// \uc544\ub798 \uba85\ub839\uc5b4\ub97c \uc785\ub825\ud558\uba74, >\ub77c\ub294 \uc785\ub825\ucc3d\uc774 \ub098\uc628\ub2e4 \uc5ec\uae30\uc5d0 \uc785\ub825\ud558\ub294 \ub370\uc774\ud130 \ud55c\uc904\ud55c\uc904\uc774 \uba54\uc2dc\uc9c0\uac00 \ub41c\ub2e4. \n./kafka-console-producer.sh --topic greeting --bootstrap-server Kafka00Service:9092,Kafka01Service:9092,Kafka02Service:9092\n\n// \uc704\uc5d0\uc11c \uc0dd\uc131\ud55c \uba54\uc2dc\uc9c0\ub97c \ubc1b\uae30\n./kafka-console-consumer.sh --topic greeting --from-beginning --bootstrap-server Kafka00Service:9092,Kafka01Service:9092,Kafka02Service:9092\n\n")),(0,t.kt)("h2",{id:"ref"},"ref"),(0,t.kt)("p",null,(0,t.kt)("a",{parentName:"p",href:"https://breezymind.com/silicon-mac-kafka-cluster-docker-compose/"},"https://breezymind.com/silicon-mac-kafka-cluster-docker-compose/"),"\n",(0,t.kt)("a",{parentName:"p",href:"https://github.com/ArminShoeibi/KafkaDockerCompose/blob/main/docker-compose-cluster.yml"},"https://github.com/ArminShoeibi/KafkaDockerCompose/blob/main/docker-compose-cluster.yml")))}c.isMDXComponent=!0}}]);