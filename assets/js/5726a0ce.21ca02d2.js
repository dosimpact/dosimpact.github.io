"use strict";(self.webpackChunkdosimpact_blog=self.webpackChunkdosimpact_blog||[]).push([[15720],{3905:(e,n,t)=>{t.d(n,{Zo:()=>i,kt:()=>k});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),l=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},i=function(e){var n=l(e.components);return r.createElement(p.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,c=e.originalType,p=e.parentName,i=o(e,["components","mdxType","originalType","parentName"]),u=l(t),d=a,k=u["".concat(p,".").concat(d)]||u[d]||m[d]||c;return t?r.createElement(k,s(s({ref:n},i),{},{components:t})):r.createElement(k,s({ref:n},i))}));function k(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var c=t.length,s=new Array(c);s[0]=d;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o[u]="string"==typeof e?e:a,s[1]=o;for(var l=2;l<c;l++)s[l]=t[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},35702:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>s,default:()=>m,frontMatter:()=>c,metadata:()=>o,toc:()=>l});var r=t(87462),a=(t(67294),t(3905));const c={sidebar_position:3},s="React Component Patterns",o={unversionedId:"g-fe/ts/react-ts/rts03",id:"g-fe/ts/react-ts/rts03",title:"React Component Patterns",description:"- React Component Patterns",source:"@site/docs/g-fe/2-ts/2-react-ts/rts03.md",sourceDirName:"g-fe/2-ts/2-react-ts",slug:"/g-fe/ts/react-ts/rts03",permalink:"/docs/g-fe/ts/react-ts/rts03",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/g-fe/2-ts/2-react-ts/rts03.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"frontEnd",previous:{title:"Typescript Props Pattern",permalink:"/docs/g-fe/ts/react-ts/rts02"},next:{title:"5.Ramda",permalink:"/docs/category/5ramda"}},p={},l=[{value:"Funnel Patterns",id:"funnel-patterns",level:2},{value:"Stack Patterns",id:"stack-patterns",level:2}],i={toc:l},u="wrapper";function m(e){let{components:n,...t}=e;return(0,a.kt)(u,(0,r.Z)({},i,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"react-component-patterns"},"React Component Patterns"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#react-component-patterns"},"React Component Patterns"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#funnel-patterns"},"Funnel Patterns")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#stack-patterns"},"Stack Patterns"))))),(0,a.kt)("h2",{id:"funnel-patterns"},"Funnel Patterns"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import { type ReactElement, type ReactNode, useEffect, useState } from "react";\n\ninterface FunnelStepProps {\n  name: string;\n  children: ReactNode;\n}\n\nexport function useFunnel<T extends string>() {\n  const [step, setStep] = useState<T | undefined>(undefined);\n\n  const Step = (props: FunnelStepProps) => {\n    return <>{props.children}</>;\n  };\n\n  const Funnel = ({\n    children,\n  }: { children: ReactElement<FunnelStepProps>[] }) => {\n    // name\uc774 \ud604\uc7ac step \uc0c1\ud0dc\uc640 \ub3d9\uc77c\ud55c Step\ub9cc \ub80c\ub354\ub9c1\n    const targetStep = children.find(\n      (childStep) => childStep.props.name === step,\n    );\n\n    if (!targetStep) return null;\n\n    return targetStep;\n  };\n\n  Funnel.Step = Step;\n\n  return [Funnel, setStep] as const;\n}\n\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'\n// \uac00\uc785\ubc29\uc2dd \ucef4\ud3ec\ub10c\ud2b8 \uc815\uc758\nconst \uac00\uc785\ubc29\uc2dd = ({ onNext }: { onNext: () => void }) => {\n  return (\n    <div>\n      <h1>\uac00\uc785\ubc29\uc2dd \uc120\ud0dd</h1>\n      <button type="button" onClick={onNext}>\n        \ub2e4\uc74c\n      </button>\n    </div>\n  );\n};\n\n// \uc8fc\ubbfc\ubc88\ud638 \ucef4\ud3ec\ub10c\ud2b8 \uc815\uc758\nconst \uc8fc\ubbfc\ubc88\ud638 = ({ onNext }: { onNext: () => void }) => {\n  return (\n    <div>\n      <h1>\uc8fc\ubbfc\ubc88\ud638 \uc785\ub825</h1>\n      <button type="button" onClick={onNext}>\n        \ub2e4\uc74c\n      </button>\n    </div>\n  );\n};\n\nexport const Sample = () => {\n  const [Funnel, setStep] = useFunnel<\n    "\uac00\uc785\ubc29\uc2dd" | "\uc8fc\ubbfc\ubc88\ud638" | "\uc9d1\uc8fc\uc18c" | "\uac00\uc785\uc131\uacf5"\n  >();\n\n  useEffect(() => {\n    setStep("\uac00\uc785\ubc29\uc2dd");\n  }, [setStep]);\n\n  return (\n    <Funnel>\n      <Funnel.Step name="\uac00\uc785\ubc29\uc2dd">\n        <\uac00\uc785\ubc29\uc2dd onNext={() => setStep("\uc8fc\ubbfc\ubc88\ud638")} />\n      </Funnel.Step>\n      <Funnel.Step name="\uc8fc\ubbfc\ubc88\ud638">\n        <\uc8fc\ubbfc\ubc88\ud638 onNext={() => setStep("\uc9d1\uc8fc\uc18c")} />\n      </Funnel.Step>\n    </Funnel>\n  );\n};\n')),(0,a.kt)("h2",{id:"stack-patterns"},"Stack Patterns"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import { useState, useEffect } from "react";\nimport type { ReactNode, ReactElement, HTMLAttributes } from "react";\n\ntype StackItemName = "preview" | (string & {});\n\ninterface StackItemProps {\n  name: StackItemName;\n  children: ReactNode;\n}\n\ninterface StackComponent extends HTMLAttributes<HTMLDivElement> {\n  (\n    props: {\n      children: ReactElement<StackItemProps>[];\n    } & HTMLAttributes<HTMLDivElement>,\n  ): ReactElement | null;\n  StackItem: (props: StackItemProps) => ReactElement;\n  PreviewItem: (props: { children: ReactNode }) => ReactElement;\n}\n\ninterface StackActions<T> {\n  push: () => void;\n  pop: () => void;\n  clear: () => void;\n  currentIndex: number;\n}\n\nexport function useStack<T extends StackItemName>(allStackNames: T[] = []) {\n  const [currentStackNames, setCurrentStackNames] = useState<T[]>([]);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n\n  const push = () => {\n    if (currentIndex < allStackNames.length - 1) {\n      const name = allStackNames[currentIndex + 1];\n      setCurrentStackNames((prev) => [...prev, name]);\n      setCurrentIndex((prev) => prev + 1);\n    }\n  };\n\n  const pop = () => {\n    setCurrentStackNames((prev) => prev.slice(0, -1));\n    setCurrentIndex((prev) => prev - 1);\n  };\n\n  const clear = () => {\n    setCurrentStackNames([]);\n    setCurrentIndex(-1);\n  };\n\n  const StackItem = (props: StackItemProps) => {\n    return <>{props.children}</>;\n  };\n\n  const PreviewItem = (props: { children: ReactNode }) => {\n    return <StackItem name="preview">{props.children}</StackItem>;\n  };\n\n  const Stack: StackComponent = ({ children, ...props }) => {\n    const targetStackItems = children.filter(\n      (childItem) =>\n        childItem.props.name === "preview" ||\n        currentStackNames.includes(childItem.props.name as T),\n    );\n\n    if (!targetStackItems.length) return null;\n\n    return <div {...props}>{targetStackItems}</div>;\n  };\n\n  Stack.StackItem = StackItem;\n  Stack.PreviewItem = PreviewItem;\n\n  const actions: StackActions<T> = {\n    push,\n    pop,\n    clear,\n    currentIndex,\n  };\n\n  return [Stack, actions] as const;\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'// Stack \uc608\uc81c \ucef4\ud3ec\ub10c\ud2b8\ub4e4\nconst WelcomeMessage = () => {\n  return (\n    <div className="p-4 bg-gray-800 rounded-lg text-white">\n      <h2 className="text-lg font-bold mb-2">\ud658\uc601\ud569\ub2c8\ub2e4!</h2>\n      <p className="text-gray-300">\n        \uc11c\ube44\uc2a4\ub97c \uc774\uc6a9\ud558\uae30 \uc804\uc5d0 \uba87 \uac00\uc9c0 \uc815\ubcf4\ub97c \uc785\ub825\ud574\uc8fc\uc138\uc694.\n      </p>\n    </div>\n  );\n};\n\nconst UserInfo = () => {\n  return (\n    <div className="p-4 bg-gray-800 rounded-lg text-white">\n      <h2 className="text-lg font-bold mb-2">\uc0ac\uc6a9\uc790 \uc815\ubcf4</h2>\n      <p className="text-gray-300">\uc774\ub984\uacfc \uc774\uba54\uc77c\uc744 \uc785\ub825\ud574\uc8fc\uc138\uc694.</p>\n    </div>\n  );\n};\n\nconst TermsAgreement = () => {\n  return (\n    <div className="p-4 bg-gray-800 rounded-lg text-white">\n      <h2 className="text-lg font-bold mb-2">\uc774\uc6a9\uc57d\uad00</h2>\n      <p className="text-gray-300">\uc11c\ube44\uc2a4 \uc774\uc6a9\uc57d\uad00\uc5d0 \ub3d9\uc758\ud574\uc8fc\uc138\uc694.</p>\n    </div>\n  );\n};\n\nexport const StackExample = () => {\n  type StackNames = "welcome" | "userInfo" | "terms";\n\n  const [Stack, { push, pop, currentIndex }] = useStack<StackNames>([\n    "welcome",\n    "userInfo",\n    "terms",\n  ]);\n\n  const handleNext = () => {\n    push();\n  };\n\n  const handlePrev = () => {\n    if (currentIndex > -1) {\n      pop();\n    }\n  };\n\n  return (\n    <div className="max-w-md mx-auto p-4 bg-gray-900 rounded-xl">\n      <Stack className="flex flex-col gap-4">\n        <Stack.StackItem name="preview">\n          <div className="mb-4 p-3 bg-gray-800 rounded-lg">\n            <p className="text-sm text-gray-400">\n              {currentIndex === -1\n                ? "\uc2dc\uc791\ud558\ub824\uba74 \ub2e4\uc74c \ubc84\ud2bc\uc744 \ud074\ub9ad\ud558\uc138\uc694"\n                : `\ud604\uc7ac \ub2e8\uacc4: ${currentIndex + 1}/3`}\n            </p>\n          </div>\n        </Stack.StackItem>\n\n        <Stack.StackItem name="welcome">\n          <div className="space-y-4">\n            <WelcomeMessage />\n          </div>\n        </Stack.StackItem>\n\n        <Stack.StackItem name="userInfo">\n          <div className="space-y-4">\n            <UserInfo />\n          </div>\n        </Stack.StackItem>\n\n        <Stack.StackItem name="terms">\n          <div className="space-y-4">\n            <TermsAgreement />\n          </div>\n        </Stack.StackItem>\n      </Stack>\n\n      <div className="mt-4 flex justify-end">\n        {currentIndex > -1 && (\n          <button\n            type="button"\n            onClick={handlePrev}\n            className="mr-2 px-4 py-2 bg-gray-700 text-gray-300 rounded-lg hover:bg-gray-600 transition-colors"\n          >\n            \uc774\uc804\n          </button>\n        )}\n        <button\n          type="button"\n          onClick={handleNext}\n          className={`px-4 py-2 text-white rounded-lg transition-colors ${\n            currentIndex === 2\n              ? "bg-green-600 hover:bg-green-500"\n              : "bg-blue-600 hover:bg-blue-500"\n          }`}\n        >\n          {currentIndex === 2 ? "\uc644\ub8cc" : "\ub2e4\uc74c"}\n        </button>\n      </div>\n    </div>\n  );\n};\n')))}m.isMDXComponent=!0}}]);