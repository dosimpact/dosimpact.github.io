"use strict";(self.webpackChunkdosimpact_blog=self.webpackChunkdosimpact_blog||[]).push([[63818],{3905:(n,t,e)=>{e.d(t,{Zo:()=>p,kt:()=>f});var a=e(67294);function r(n,t,e){return t in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}function o(n,t){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),e.push.apply(e,a)}return e}function s(n){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?o(Object(e),!0).forEach((function(t){r(n,t,e[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):o(Object(e)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(e,t))}))}return n}function d(n,t){if(null==n)return{};var e,a,r=function(n,t){if(null==n)return{};var e,a,r={},o=Object.keys(n);for(a=0;a<o.length;a++)e=o[a],t.indexOf(e)>=0||(r[e]=n[e]);return r}(n,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(a=0;a<o.length;a++)e=o[a],t.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(n,e)&&(r[e]=n[e])}return r}var l=a.createContext({}),i=function(n){var t=a.useContext(l),e=t;return n&&(e="function"==typeof n?n(t):s(s({},t),n)),e},p=function(n){var t=i(n.components);return a.createElement(l.Provider,{value:t},n.children)},m="mdxType",c={inlineCode:"code",wrapper:function(n){var t=n.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(n,t){var e=n.components,r=n.mdxType,o=n.originalType,l=n.parentName,p=d(n,["components","mdxType","originalType","parentName"]),m=i(e),u=r,f=m["".concat(l,".").concat(u)]||m[u]||c[u]||o;return e?a.createElement(f,s(s({ref:t},p),{},{components:e})):a.createElement(f,s({ref:t},p))}));function f(n,t){var e=arguments,r=t&&t.mdxType;if("string"==typeof n||r){var o=e.length,s=new Array(o);s[0]=u;var d={};for(var l in t)hasOwnProperty.call(t,l)&&(d[l]=t[l]);d.originalType=n,d[m]="string"==typeof n?n:r,s[1]=d;for(var i=2;i<o;i++)s[i]=e[i];return a.createElement.apply(null,s)}return a.createElement.apply(null,e)}u.displayName="MDXCreateElement"},86769:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>c,frontMatter:()=>o,metadata:()=>d,toc:()=>i});var a=e(87462),r=(e(67294),e(3905));const o={sidebar_position:9},s="vectorbt - \uc815\ubc30\uc5f4 SMAIndicator",d={unversionedId:"g-da/quant/vectorbt-labs/quant009",id:"g-da/quant/vectorbt-labs/quant009",title:"vectorbt - \uc815\ubc30\uc5f4 SMAIndicator",description:"1Pager",source:"@site/docs/g-da/3-quant/5-vectorbt-labs/quant009.md",sourceDirName:"g-da/3-quant/5-vectorbt-labs",slug:"/g-da/quant/vectorbt-labs/quant009",permalink:"/docs/g-da/quant/vectorbt-labs/quant009",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/g-da/3-quant/5-vectorbt-labs/quant009.md",tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9},sidebar:"dataAnalytics",previous:{title:"vectorbt - template",permalink:"/docs/g-da/quant/vectorbt-labs/labs-0"},next:{title:"vectorbt - \ubcc0\ub3d9\uc131 \ub3cc\ud30c",permalink:"/docs/g-da/quant/vectorbt-labs/quant010"}},l={},i=[{value:"1Pager",id:"1pager",level:2},{value:"Hypothesis",id:"hypothesis",level:3},{value:"Long Position",id:"long-position",level:3},{value:"Short Position",id:"short-position",level:3},{value:"Result - BTC/USDT, 1d",id:"result---btcusdt-1d",level:2},{value:"stats",id:"stats",level:3},{value:"Result - BTC/USDT, 4d",id:"result---btcusdt-4d",level:2},{value:"stats",id:"stats-1",level:3},{value:"Result - BTC/USDT, 1h",id:"result---btcusdt-1h",level:2},{value:"stats",id:"stats-2",level:3},{value:"summary",id:"summary",level:2}],p={toc:i},m="wrapper";function c(n){let{components:t,...e}=n;return(0,r.kt)(m,(0,a.Z)({},p,e,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"vectorbt---\uc815\ubc30\uc5f4-smaindicator"},"vectorbt - \uc815\ubc30\uc5f4 SMAIndicator"),(0,r.kt)("h2",{id:"1pager"},"1Pager"),(0,r.kt)("h3",{id:"hypothesis"},"Hypothesis"),(0,r.kt)("p",null,"\uc774\ub3d9\ud3c9\uade0\uc120\uc744 \uc774\uc6a9\ud55c \uc288\ud37c \uc0c1\uc2b9\uc7a5(\uc815\ubc30\uc5f4) \ub9e4\ub9e4 \uae30\ubc95\uc774\ub2e4. "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"SMAIndicator \ubb38\uc11c  "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://technical-analysis-library-in-python.readthedocs.io/en/latest/ta.html#ta.trend.SMAIndicator"},"https://technical-analysis-library-in-python.readthedocs.io/en/latest/ta.html#ta.trend.SMAIndicator"))),(0,r.kt)("p",null,"1\uc77c 1\ud68c \uccb4\ud06c  "),(0,r.kt)("h3",{id:"long-position"},"Long Position"),(0,r.kt)("p",null,"\ub9e4\uc218 \uc870\uac74 : "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\ud604\uc7ac \uac00\uaca9 > 3\uc77c \uc774\ud3c9\uc120  "),(0,r.kt)("li",{parentName:"ul"},"\ud604\uc7ac \uac00\uaca9 > 5\uc77c \uc774\ud3c9\uc120  "),(0,r.kt)("li",{parentName:"ul"},"\ud604\uc7ac \uac00\uaca9 > 10\uc77c \uc774\ud3c9\uc120  "),(0,r.kt)("li",{parentName:"ul"},"\ud604\uc7ac \uac00\uaca9 > 20\uc77c \uc774\ud3c9\uc120  ")),(0,r.kt)("h3",{id:"short-position"},"Short Position"),(0,r.kt)("p",null,"\ub9e4\uc218 \uc870\uac74 : "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\ud604\uc7ac \uac00\uaca9 < 3\uc77c \uc774\ud3c9\uc120  "),(0,r.kt)("li",{parentName:"ul"},"\ud604\uc7ac \uac00\uaca9 < 5\uc77c \uc774\ud3c9\uc120  "),(0,r.kt)("li",{parentName:"ul"},"\ud604\uc7ac \uac00\uaca9 < 10\uc77c \uc774\ud3c9\uc120  "),(0,r.kt)("li",{parentName:"ul"},"\ud604\uc7ac \uac00\uaca9 < 20\uc77c \uc774\ud3c9\uc120  ")),(0,r.kt)("h2",{id:"result---btcusdt-1d"},"Result - BTC/USDT, 1d"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"import numpy as np\nimport pandas as pd\nimport ccxt\nimport ta\nimport vectorbt as vbt\nimport quantstats as qs\nimport warnings\n\n# data layer\ndf = vbt.CCXTData.download_symbol(\n    \"BTC/USDT\",\n    exchange='upbit',\n    config=None,\n    timeframe='1d',\n    start='5 months ago', # '1 months ago'\n    end='now UTC',\n    delay=0.1,\n    limit=500,\n    retries=3,\n    show_progress=True,\n    params=None,\n    tqdm_kwargs=None\n)\n\n# signal layer\ndf['ma3'] = ta.trend.SMAIndicator(df['Close'], 3).sma_indicator()\ndf['ma5'] = ta.trend.SMAIndicator(df['Close'], 5).sma_indicator()\ndf['ma10'] = ta.trend.SMAIndicator(df['Close'], 10).sma_indicator()\ndf['ma20'] = ta.trend.SMAIndicator(df['Close'], 20).sma_indicator()\n\nstraightArrangement = (df['Close'] > df['ma3']) & (df['ma3'] > df['ma5']) & (df['ma5'] > df['ma10']) & (df['ma10'] > df['ma20'])\nreverseArrangement = (df['Close'] < df['ma3']) & (df['ma3'] < df['ma5']) & (df['ma5'] < df['ma10']) & (df['ma10'] < df['ma20'])\n\ndf['signal1'] = np.select([straightArrangement,reverseArrangement],[1,-1],0)\n\ncond_go = [ df['signal1'] == 1, df['signal1'] == -1]\ndf['go'] = np.select(cond_go, [1,-1], 0)\n\n# anomalo\ndf['go'].value_counts()\n\n# trading layer\npf = vbt.Portfolio.from_signals(\n    df['Close'],\n    entries = (df['go']==1), # long \ud3ec\uc9c0\uc158 \uc9c4\uc785\n    exits = (df['go']==-1), # long \ud3ec\uc9c0\uc158 \ud0c8\ucd9c\n    fees = 0.0006, # \uac70\ub798\uc218\uc218\ub8cc ( bybit ) \uc8fc\ubb38\uc2dc post-only\n    # post-only True -> \ubb34\uc870\uac74 \uc9c0\uc815\ud55c \uac00\uaca9\uc5d0\ub9cc \uccb4\uacb0 / \uc218\uc218\ub8cc \ub0ae\uac8c \uc9c0\ubd88 \uac00\ub2a5 / \uc2e4\uc218\ud574\uc11c \uc190\ud574\ubcf4\ub294 \uacbd\uc6b0\uac00 \uc5c6\ub2e4. (\uc2dc\uc7a5\uac00 \uccb4\uacb0 \ub418\ub294 \ucf00\uc774\uc2a4)\n    tp_stop = 0.09, # take profit, 9% \uc774\uc775 > \uc775\uc808\n    sl_stop = 0.02, # stop loss, 2% \uc190\ud574 > \uc190\uc808\n    sl_trail = True, # \ud2b8\ub808\uc77c\ub9c1 \uc2a4\ud0d1\n    # short_entries = (df['go']==-1), # short \ud3ec\uc9c0\uc158 \uc9c4\uc785\n    # short_exits = (df['go']==1) # short \ud3ec\uc9c0\uc158 \ud0c8\ucd9c\n)\npf.stats()\n\n# visualize layer\npf.plot().show()\n\n# report layer\npf.qs.plot_snapshot()\nqs.plots.snapshot(pf.benchmark_returns())\n")),(0,r.kt)("h3",{id:"stats"},"stats"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Start                         2023-10-04 00:00:00+00:00\nEnd                           2024-03-03 00:00:00+00:00\nPeriod                                152 days 00:00:00\nStart Value                                       100.0\nEnd Value                                    187.185005\nTotal Return [%]                              87.185005\nBenchmark Return [%]                         123.386994\nMax Gross Exposure [%]                            100.0\nTotal Fees Paid                                0.217853\nMax Drawdown [%]                              11.252809\nMax Drawdown Duration                  32 days 00:00:00\nTotal Trades                                          2\nTotal Closed Trades                                   1\nTotal Open Trades                                     1\nOpen Trade PnL                                 55.61114\nWin Rate [%]                                      100.0\nBest Trade [%]                                 31.59281\nWorst Trade [%]                                31.59281\nAvg Winning Trade [%]                          31.59281\nAvg Losing Trade [%]                                NaN\nAvg Winning Trade Duration             88 days 00:00:00\nAvg Losing Trade Duration                           NaT\nProfit Factor                                       inf\nExpectancy                                    31.573865\nSharpe Ratio                                    3.81679\nCalmar Ratio                                  31.158288\nOmega Ratio                                    1.938685\nSortino Ratio                                  7.161942\n")),(0,r.kt)("h2",{id:"result---btcusdt-4d"},"Result - BTC/USDT, 4d"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"import numpy as np\nimport pandas as pd\nimport ccxt\nimport ta\nimport vectorbt as vbt\nimport quantstats as qs\nimport warnings\n\n# data layer\ndf = vbt.CCXTData.download_symbol(\n    \"BTC/USDT\",\n    exchange='upbit',\n    config=None,\n    timeframe='4h',\n    start='6 months ago', # '1 months ago'\n    end='now UTC',\n    delay=0.1,\n    limit=500,\n    retries=3,\n    show_progress=True,\n    params=None,\n    tqdm_kwargs=None\n)\n\n# signal layer\ndf['ma3'] = ta.trend.SMAIndicator(df['Close'], 3).sma_indicator()\ndf['ma5'] = ta.trend.SMAIndicator(df['Close'], 5).sma_indicator()\ndf['ma10'] = ta.trend.SMAIndicator(df['Close'], 10).sma_indicator()\ndf['ma20'] = ta.trend.SMAIndicator(df['Close'], 20).sma_indicator()\n\nstraightArrangement = (df['Close'] > df['ma3']) & (df['ma3'] > df['ma5']) & (df['ma5'] > df['ma10']) & (df['ma10'] > df['ma20'])\nreverseArrangement = (df['Close'] < df['ma3']) & (df['ma3'] < df['ma5']) & (df['ma5'] < df['ma10']) & (df['ma10'] < df['ma20'])\n\ndf['signal1'] = np.select([straightArrangement,reverseArrangement],[1,-1],0)\n\ncond_go = [ df['signal1'] == 1, df['signal1'] == -1]\ndf['go'] = np.select(cond_go, [1,-1], 0)\n\n# anomalo\nprint(\"df['go'] \\n\",df['go'].value_counts())\n\nreturns = (df['Close'].iloc[-1] - df['Close'].iloc[0]) / df['Close'].iloc[0]\nprint(\"benchmark total return\",returns*100)\n\n# trading layer\npf = vbt.Portfolio.from_signals(\n    df['Close'],\n    entries = (df['go']==1), # long \ud3ec\uc9c0\uc158 \uc9c4\uc785\n    exits = (df['go']==-1), # long \ud3ec\uc9c0\uc158 \ud0c8\ucd9c\n    fees = 0.0006, # \uac70\ub798\uc218\uc218\ub8cc ( bybit ) \uc8fc\ubb38\uc2dc post-only\n    # post-only True -> \ubb34\uc870\uac74 \uc9c0\uc815\ud55c \uac00\uaca9\uc5d0\ub9cc \uccb4\uacb0 / \uc218\uc218\ub8cc \ub0ae\uac8c \uc9c0\ubd88 \uac00\ub2a5 / \uc2e4\uc218\ud574\uc11c \uc190\ud574\ubcf4\ub294 \uacbd\uc6b0\uac00 \uc5c6\ub2e4. (\uc2dc\uc7a5\uac00 \uccb4\uacb0 \ub418\ub294 \ucf00\uc774\uc2a4)\n    # tp_stop = 0.09, # take profit, 9% \uc774\uc775 > \uc775\uc808\n    # sl_stop = 0.02, # stop loss, 2% \uc190\ud574 > \uc190\uc808\n    sl_trail = True, # \ud2b8\ub808\uc77c\ub9c1 \uc2a4\ud0d1\n    # short_entries = (df['go']==-1), # short \ud3ec\uc9c0\uc158 \uc9c4\uc785\n    # short_exits = (df['go']==1) # short \ud3ec\uc9c0\uc158 \ud0c8\ucd9c\n)\nprint(pf.stats())\n\n# visualize layer\npf.plot().show()\n\n# report layer\npf.qs.plot_snapshot()\nqs.plots.snapshot(pf.benchmark_returns())\n\n\n")),(0,r.kt)("h3",{id:"stats-1"},"stats"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Start                         2023-10-23 16:00:00+00:00\nEnd                           2024-03-03 12:00:00+00:00\nPeriod                                              493\nStart Value                                       100.0\nEnd Value                                    162.429861\nTotal Return [%]                              62.429861\nBenchmark Return [%]                          99.950618\nMax Gross Exposure [%]                            100.0\nTotal Fees Paid                                1.103005\nMax Drawdown [%]                               7.654154\nMax Drawdown Duration                              82.0\nTotal Trades                                          8\nTotal Closed Trades                                   8\nTotal Open Trades                                     0\nOpen Trade PnL                                      0.0\nWin Rate [%]                                       75.0\nBest Trade [%]                                 18.15682\nWorst Trade [%]                               -2.501163\nAvg Winning Trade [%]                          9.304526\nAvg Losing Trade [%]                          -1.907836\nAvg Winning Trade Duration                    47.333333\nAvg Losing Trade Duration                          12.5\nProfit Factor                                 15.859574\nExpectancy                                     7.803733\n")),(0,r.kt)("h2",{id:"result---btcusdt-1h"},"Result - BTC/USDT, 1h"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"import numpy as np\nimport pandas as pd\nimport ccxt\nimport ta\nimport vectorbt as vbt\nimport quantstats as qs\nimport warnings\n\n# data layer\ndf = vbt.CCXTData.download_symbol(\n    \"BTC/USDT\",\n    exchange='upbit',\n    config=None,\n    timeframe='1h',\n    start='6 months ago', # '1 months ago'\n    end='now UTC',\n    delay=0.1,\n    limit=500,\n    retries=3,\n    show_progress=True,\n    params=None,\n    tqdm_kwargs=None\n)\n\n# signal layer\ndf['ma3'] = ta.trend.SMAIndicator(df['Close'], 3).sma_indicator()\ndf['ma5'] = ta.trend.SMAIndicator(df['Close'], 12).sma_indicator()\ndf['ma10'] = ta.trend.SMAIndicator(df['Close'], 36).sma_indicator()\ndf['ma20'] = ta.trend.SMAIndicator(df['Close'], 60).sma_indicator()\n\nstraightArrangement = (df['Close'] > df['ma3']) & (df['ma3'] > df['ma5']) & (df['ma5'] > df['ma10']) & (df['ma10'] > df['ma20'])\nreverseArrangement = (df['Close'] < df['ma3']) & (df['ma3'] < df['ma5']) & (df['ma5'] < df['ma10']) & (df['ma10'] < df['ma20'])\n\ndf['signal1'] = np.select([straightArrangement,reverseArrangement],[1,-1],0)\n\ncond_go = [ df['signal1'] == 1, df['signal1'] == -1]\ndf['go'] = np.select(cond_go, [1,-1], 0)\n\n# anomalo\nprint(\"df['go'] \\n\",df['go'].value_counts())\n\nreturns = (df['Close'].iloc[-1] - df['Close'].iloc[0]) / df['Close'].iloc[0]\nprint(\"benchmark total return\",returns*100)\n\n# trading layer\npf = vbt.Portfolio.from_signals(\n    df['Close'],\n    entries = (df['go']==1), # long \ud3ec\uc9c0\uc158 \uc9c4\uc785\n    exits = (df['go']==-1), # long \ud3ec\uc9c0\uc158 \ud0c8\ucd9c\n    fees = 0.0006, # \uac70\ub798\uc218\uc218\ub8cc ( bybit ) \uc8fc\ubb38\uc2dc post-only\n    # post-only True -> \ubb34\uc870\uac74 \uc9c0\uc815\ud55c \uac00\uaca9\uc5d0\ub9cc \uccb4\uacb0 / \uc218\uc218\ub8cc \ub0ae\uac8c \uc9c0\ubd88 \uac00\ub2a5 / \uc2e4\uc218\ud574\uc11c \uc190\ud574\ubcf4\ub294 \uacbd\uc6b0\uac00 \uc5c6\ub2e4. (\uc2dc\uc7a5\uac00 \uccb4\uacb0 \ub418\ub294 \ucf00\uc774\uc2a4)\n    # tp_stop = 0.09, # take profit, 9% \uc774\uc775 > \uc775\uc808\n    # sl_stop = 0.02, # stop loss, 2% \uc190\ud574 > \uc190\uc808\n    sl_trail = True, # \ud2b8\ub808\uc77c\ub9c1 \uc2a4\ud0d1\n    # short_entries = (df['go']==-1), # short \ud3ec\uc9c0\uc158 \uc9c4\uc785\n    # short_exits = (df['go']==1) # short \ud3ec\uc9c0\uc158 \ud0c8\ucd9c\n)\nprint(pf.stats())\n\n# visualize layer\npf.plot().show()\n\n# report layer\npf.qs.plot_snapshot()\nqs.plots.snapshot(pf.benchmark_returns())\n")),(0,r.kt)("h3",{id:"stats-2"},"stats"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Start                         2023-09-14 23:00:00+00:00\nEnd                           2024-03-03 13:00:00+00:00\nPeriod                                             1800\nStart Value                                       100.0\nEnd Value                                    171.915561\nTotal Return [%]                              71.915561\nBenchmark Return [%]                         135.555664\nMax Gross Exposure [%]                            100.0\nTotal Fees Paid                                 1.31256\nMax Drawdown [%]                              10.752641\nMax Drawdown Duration                             581.0\nTotal Trades                                          9\nTotal Closed Trades                                   9\nTotal Open Trades                                     0\nOpen Trade PnL                                      0.0\nWin Rate [%]                                  55.555556\nBest Trade [%]                                27.186123\nWorst Trade [%]                               -3.204087\nAvg Winning Trade [%]                         14.183444\nAvg Losing Trade [%]                          -2.341058\nAvg Winning Trade Duration                        202.2\nAvg Losing Trade Duration                         41.25\nProfit Factor                                  7.330472\nExpectancy                                     7.990618\n")),(0,r.kt)("h2",{id:"summary"},"summary"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"buy and hold win")))}c.isMDXComponent=!0}}]);