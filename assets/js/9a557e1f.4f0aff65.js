"use strict";(self.webpackChunkdosimpact_blog=self.webpackChunkdosimpact_blog||[]).push([[95633],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>k});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},d=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=l(t),m=o,k=p["".concat(c,".").concat(m)]||p[m]||u[m]||a;return t?r.createElement(k,s(s({ref:n},d),{},{components:t})):r.createElement(k,s({ref:n},d))}));function k(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,s=new Array(a);s[0]=m;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i[p]="string"==typeof e?e:o,s[1]=i;for(var l=2;l<a;l++)s[l]=t[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},7449:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var r=t(87462),o=(t(67294),t(3905));const a={sidebar_position:1},s="1.K8s Install",i={unversionedId:"g-devops/docker/k8s/k8s-install",id:"g-devops/docker/k8s/k8s-install",title:"1.K8s Install",description:"\uc2e4\uc2b5 \ud658\uacbd",source:"@site/docs/g-devops/1-docker/3-k8s/1.k8s-install.md",sourceDirName:"g-devops/1-docker/3-k8s",slug:"/g-devops/docker/k8s/k8s-install",permalink:"/docs/g-devops/docker/k8s/k8s-install",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/g-devops/1-docker/3-k8s/1.k8s-install.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"devOps",previous:{title:"3.K8S",permalink:"/docs/category/3k8s"},next:{title:"AWS Basic",permalink:"/docs/category/aws-basic"}},c={},l=[{value:"\uc2e4\uc2b5 \ud658\uacbd",id:"\uc2e4\uc2b5-\ud658\uacbd",level:2}],d={toc:l},p="wrapper";function u(e){let{components:n,...t}=e;return(0,o.kt)(p,(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"1k8s-install"},"1.K8s Install"),(0,o.kt)("h2",{id:"\uc2e4\uc2b5-\ud658\uacbd"},"\uc2e4\uc2b5 \ud658\uacbd"),(0,o.kt)("p",null,"colima"),(0,o.kt)("h1",{id:"install"},"Install"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"# 1. Colima \uc124\uce58\nbrew install colima\n\n# 2. Docker CLI\ub9cc \uc124\uce58 (Docker Engine \uc5c6\uc774)\nbrew install docker\n\n# 3. Docker Compose \uc124\uce58 (\uc120\ud0dd)\nbrew install docker-compose\n\n# 4. Colima \uc2dc\uc791 (\ud655\uc778\uc6a9)\ncolima start\n# - 4.1 Mac OS \uc5d0\uc11c\ub294 \uc544\ub798\ub85c \ncolima start --vm-type vz --mount-type virtiofs\n\n# 5. Docker \uc5f0\uacb0 \ud655\uc778\ndocker info\ndocker run hello-world\n\n# 6. \uc790\ub3d9 \uc7ac\uc2dc\uc791 \ub4f1\ub85d  \n# - \ucc38\uace0\ub85c \ucd08\uae30 \ubd80\ud305\uc2dc docker \ub370\ubaac\uc774 \uc62c\ub77c\uac00\ub294\ub370 \uc2dc\uac04\uc774 \uc880 \uac78\ub9b0\ub2e4.   \nbrew services start colima \n\n\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'\uc88b\uc544\uc694! \u2705 Colima + k3s \uc124\uce58 \uc9c1\ud6c4 Kubernetes Dashboard \uc124\uc815 \uacfc\uc815\uc744 \uae54\ub054\ud558\uac8c \uc694\uc57d\ud574\uc904\uac8c\uc694.\n\n\u2e3b\n\n\ud83d\ude80 Colima + k3s Dashboard \uc124\uc815 \uc694\uc57d\n\n\u2705 1\ufe0f\u20e3 Dashboard \uc124\uce58\n\nkubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.7.0/aio/deploy/recommended.yaml\n\n    \u2022   kubernetes-dashboard \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \ubc0f Pod, Service \uc790\ub3d9 \uc0dd\uc131\n\n\u2e3b\n\n\u2705 2\ufe0f\u20e3 Dashboard \uc11c\ube44\uc2a4(NodePort\ub85c \uc5f4\uae30)\n\nkubectl patch svc kubernetes-dashboard -n kubernetes-dashboard \\\n  -p \'{"spec":{"type":"NodePort","ports":[{"port":443,"targetPort":8443,"nodePort":32000}]}}\'\n\n    \u2022   NodePort 32000\uc73c\ub85c Dashboard \ub178\ucd9c\n    \u2022   targetPort: 8443 (Pod\uc758 HTTPS \ud3ec\ud2b8)\ub85c \uc5f0\uacb0\ud574\uc57c \ud568\n\n\u2e3b\n\n\u2705 3\ufe0f\u20e3 \ud3ec\ud2b8\ud3ec\uc6cc\ub529/\uc811\uc18d \uacbd\ub85c\n    \u2022   \ub85c\uceec\uc5d0\uc11c \u2192 https://localhost:32000\n    \u2022   \uc678\ubd80\uc5d0\uc11c \uc811\uc18d\ud558\ub824\uba74 \uacf5\uc720\uae30\uc5d0\uc11c \uc678\ubd80\ud3ec\ud2b8 \u2192 Mac Studio:32000 \ud3ec\ud2b8\ud3ec\uc6cc\ub529 \ud6c4\n\u2192 https://\uacf5\uc720\uae30IP:<\uc678\ubd80\ud3ec\ud2b8> \ub85c \uc811\uc18d\n\n\u2e3b\n\n\u2705 4\ufe0f\u20e3 \uad00\ub9ac\uc790 \uacc4\uc815(ServiceAccount) \uc0dd\uc131\n\nadmin-user.yaml \uc791\uc131 \ud6c4 \uc801\uc6a9:\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: admin-user\n  namespace: kubernetes-dashboard\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: admin-user\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cluster-admin\nsubjects:\n- kind: ServiceAccount\n  name: admin-user\n  namespace: kubernetes-dashboard\n\nkubectl apply -f admin-user.yaml\n\n\n\u2e3b\n\n\u2705 5\ufe0f\u20e3 \ub85c\uadf8\uc778 \ud1a0\ud070 \ubc1c\uae09\n\nkubectl -n kubernetes-dashboard create token admin-user\n\n    \u2022   \ucd9c\ub825\ub41c Token\uc744 \ubcf5\uc0ac\ud574 Dashboard \ub85c\uadf8\uc778 \ud654\uba74\uc5d0 \ubd99\uc5ec\ub123\uae30\n\n\u2e3b\n\n\u2705 6\ufe0f\u20e3 \ube0c\ub77c\uc6b0\uc800 \uc811\uc18d\n    \u2022   \uc8fc\uc18c\ucc3d\uc5d0\uc11c https://<Mac IP>:32000 (\ub610\ub294 \uacf5\uc720\uae30 \uc678\ubd80 \ud3ec\ud2b8) \uc785\ub825\n    \u2022   \ube0c\ub77c\uc6b0\uc800 \ubcf4\uc548 \uacbd\uace0 \u2192 \u201c\uace0\uae09 \u2192 \uacc4\uc18d \uc9c4\ud589\u201d\n    \u2022   \ub85c\uadf8\uc778 \ud654\uba74\uc5d0\uc11c \ud1a0\ud070 \uc120\ud0dd \u2192 \ubc1c\uae09\ubc1b\uc740 \ud1a0\ud070 \uc785\ub825\n\n\u2e3b\n\n\ud83c\udfaf \uc644\ub8cc\n\n\uc774\uc81c Colima + k3s \uc704\uc5d0\uc11c Kubernetes Dashboard\ub97c \uc678\ubd80 \ube0c\ub77c\uc6b0\uc800\ub85c \uc811\uc18d \uac00\ub2a5\ud558\uac8c \ub428.\n\n\u2e3b\n\n\ud83d\udc49 \ud55c \ubb38\uc7a5 \uc694\uc57d:\nDashboard \uc124\uce58 \u2192 Service NodePort(32000)\ub85c \ub178\ucd9c \u2192 admin-user \uc0dd\uc131 & \ud1a0\ud070 \ubc1c\uae09 \u2192 \ube0c\ub77c\uc6b0\uc800 HTTPS \uc811\uc18d & \ud1a0\ud070 \ub85c\uadf8\uc778.\n\n')))}u.isMDXComponent=!0}}]);