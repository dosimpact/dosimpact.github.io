"use strict";(self.webpackChunkdosimpact_blog=self.webpackChunkdosimpact_blog||[]).push([[98319],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>g});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=r.createContext({}),p=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(i.Provider,{value:n},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(t),d=a,g=m["".concat(i,".").concat(d)]||m[d]||u[d]||o;return t?r.createElement(g,s(s({ref:n},c),{},{components:t})):r.createElement(g,s({ref:n},c))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=d;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l[m]="string"==typeof e?e:a,s[1]=l;for(var p=2;p<o;p++)s[p]=t[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},39049:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=t(87462),a=(t(67294),t(3905));const o={sidebar_position:3},s="(Stream) 2. Nodejs \uc5d0\uc11c \uad6c\ud604",l={unversionedId:"g-be/node/stream/co003-stream2",id:"g-be/node/stream/co003-stream2",title:"(Stream) 2. Nodejs \uc5d0\uc11c \uad6c\ud604",description:"\uc2a4\ud2b8\ub9bc 101 (\uae30\ucd08)",source:"@site/docs/g-be/1-node/3-stream/co003-stream2.md",sourceDirName:"g-be/1-node/3-stream",slug:"/g-be/node/stream/co003-stream2",permalink:"/docs/g-be/node/stream/co003-stream2",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/g-be/1-node/3-stream/co003-stream2.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"backEnd",previous:{title:"(Stream) 1.Stream \uac1c\ub150",permalink:"/docs/g-be/node/stream/co002-stream1"},next:{title:"(Stream) 3. Browser Stream Saver",permalink:"/docs/g-be/node/stream/co003-stream3"}},i={},p=[{value:"\uc2a4\ud2b8\ub9bc 101 (\uae30\ucd08)",id:"\uc2a4\ud2b8\ub9bc-101-\uae30\ucd08",level:3},{value:"Event vs Pipe",id:"event-vs-pipe",level:3},{value:"\uc774\ubca4\ud2b8\uc640 \ud568\uc218 \ubaa9\ub85d",id:"\uc774\ubca4\ud2b8\uc640-\ud568\uc218-\ubaa9\ub85d",level:3},{value:"\uc77d\uae30 \uac00\ub2a5\ud55c \uc2a4\ud2b8\ub9bc\uc758 \uc77c\uc2dc \uc815\uc9c0 \ubaa8\ub4dc\uc640 \ud750\ub984 \ubaa8\ub4dc",id:"\uc77d\uae30-\uac00\ub2a5\ud55c-\uc2a4\ud2b8\ub9bc\uc758-\uc77c\uc2dc-\uc815\uc9c0-\ubaa8\ub4dc\uc640-\ud750\ub984-\ubaa8\ub4dc",level:3},{value:"examples",id:"examples",level:2},{value:"eg01 stdin &gt; stdout \uc2a4\ud2b8\ub9bc ( pipe )",id:"eg01-stdin--stdout-\uc2a4\ud2b8\ub9bc--pipe-",level:3},{value:"eg02 Transform ( pipe )",id:"eg02-transform--pipe-",level:3},{value:"eg03 Transform ( event, pipe )",id:"eg03-transform--event-pipe-",level:3},{value:"eg04 bigFile stream server.",id:"eg04-bigfile-stream-server",level:3},{value:"eg05 DB readable stream.",id:"eg05-db-readable-stream",level:3},{value:"eg06 gzip readable stream.",id:"eg06-gzip-readable-stream",level:3},{value:"Stream in Browser eg1 DOM\uc5d0 \uc2a4\ud2b8\ub9bc \ub79c\ub354\ub9c1",id:"stream-in-browser-eg1-dom\uc5d0-\uc2a4\ud2b8\ub9bc-\ub79c\ub354\ub9c1",level:3},{value:"Stream in Browser eg2 \ud30c\uc77c\uc77d\uae30 \uc4f0\ud2b8\ub9bc",id:"stream-in-browser-eg2-\ud30c\uc77c\uc77d\uae30-\uc4f0\ud2b8\ub9bc",level:3},{value:"Stream in Browser eg3 \ud30c\uc77c \uc800\uc7a5",id:"stream-in-browser-eg3-\ud30c\uc77c-\uc800\uc7a5",level:3}],c={toc:p},m="wrapper";function u(e){let{components:n,...t}=e;return(0,a.kt)(m,(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"stream-2-nodejs-\uc5d0\uc11c-\uad6c\ud604"},"(Stream) 2. Nodejs \uc5d0\uc11c \uad6c\ud604"),(0,a.kt)("h3",{id:"\uc2a4\ud2b8\ub9bc-101-\uae30\ucd08"},"\uc2a4\ud2b8\ub9bc 101 (\uae30\ucd08)"),(0,a.kt)("p",null,"Node.js\uc5d0\ub294 \ub124 \uac00\uc9c0 \uae30\ucd08 \uc2a4\ud2b8\ub9bc \ud0c0\uc785\uc774 \uc788\uc2b5\ub2c8\ub2e4. Readable, Writable, Duplex, Transform \uc2a4\ud2b8\ub9bc\uc785\ub2c8\ub2e4.  "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\uc77d\uae30 \uac00\ub2a5\ud55c(readable) \uc2a4\ud2b8\ub9bc\uc740 \uc18c\ube44\ud560\uc218 \uc788\ub294 \ub370\uc774\ud130\ub97c \ucd94\uc0c1\ud654\ud55c \uac83\uc785\ub2c8\ub2e4. \uc608\ub97c\ub4e4\uc5b4 fs.createReadStream \uba54\uc18c\ub4dc\uac00 \uadf8\ub807\uc8e0.  "),(0,a.kt)("li",{parentName:"ul"},"\uc4f0\uae30 \uac00\ub2a5\ud55c (writable) \uc2a4\ud2b8\ub9bc\uc740 \ub370\uc774\ud130\ub97c \uae30\ub85d\ud560\uc218 \uc788\ub294 \uc885\ucc29\uc810\uc744 \ucd94\uc0c1\ud654\ud55c \uac83\uc785\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 fs.createWriteStream \uba54\uc18c\ub4dc\uac00 \uc788\uc8e0.  "),(0,a.kt)("li",{parentName:"ul"},"\ub4c0\ud50c\ub809\uc2a4(duplex) \uc2a4\ud2b8\ub9bc\uc740 \uc77d\uae30/\uc4f0\uae30 \ubaa8\ub450 \uac00\ub2a5\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 TCP \uc18c\ucf13\uc774 \uc788\uc8e0.  ")),(0,a.kt)("p",null,"\ud2b8\ub79c\uc2a4\ud3fc(transform) \uc2a4\ud2b8\ub9bc\uc740 \uae30\ubcf8\uc801\uc73c\ub85c \ub4c0\ud50c\ub809\uc2a4 \uc2a4\ud2b8\ub9bc\uc785\ub2c8\ub2e4."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\ub370\uc774\ud130\ub97c \uc77d\uac70\ub098 \uae30\ub85d\ud560 \ub54c \uc218\uc815/\ubcc0\ud658\ub420\uc218 \uc788\ub294 \ub370\uc774\ud130\uc8e0."),(0,a.kt)("li",{parentName:"ul"},"\uc608\ub97c\ub4e4\uc5b4 gzip\uc744 \uc774\uc6a9\ud574 \ub370\uc774\ud130\ub97c \uc555\ucd95\ud558\ub294 zlib.createGzip \uc2a4\ud2b8\ub9bc\uc774 \uc788\uc2b5\ub2c8\ub2e4."),(0,a.kt)("li",{parentName:"ul"},"\uc785\ub825\uc740 \uc4f0\uae30 \uac00\ub2a5\ud55c \uc2a4\ud2b8\ub9bc\uc774\uace0 \ucd9c\ub825\uc740 \uc77d\uae30 \uac00\ub2a5\ud55c \uc2a4\ud2b8\ub9bc\uc778 \ud2b8\ub79c\uc2a4\ud3fc \uc2a4\ud2b8\ub9bc\uc744 \uc0dd\uac01\ud560 \uc218 \uc788\uc744 \uac81\ub2c8\ub2e4. - \ud2b8\ub79c\uc2a4\ud3fc \uc2a4\ud2b8\ub9bc\uc774 ",(0,a.kt)("em",{parentName:"li"},'"\uc2a4\ud2b8\ub9bc\uc744 \ud1b5\ud574(through streams)"'),"\ub77c\uace0 \ubd88\ub9ac\ub294 \uac83\uc744 \ub4e4\uc5b4 \ubd24\uc744 \uac81\ub2c8\ub2e4."),(0,a.kt)("li",{parentName:"ul"},"\ubaa8\ub4e0 \uc2a4\ud2b8\ub9bc\uc740 EventEmitter\uc758 \uc778\uc2a4\ud134\uc2a4 \uc785\ub2c8\ub2e4. \ub370\uc774\ud130\ub97c \uc77d\uac70\ub098 \uc4f8 \ub54c \uc0ac\uc6a9\ud560 \uc774\ubca4\ud2b8\ub97c \ubc29\ucd9c(emit) \ud569\ub2c8\ub2e4."),(0,a.kt)("li",{parentName:"ul"},"\ud558\uc9c0\ub9cc, pipe \uba54\uc18c\ub4dc\ub97c \uc774\uc6a9\ud558\uba74 \ub354 \uac04\ub2e8\ud558\uac8c \uc2a4\ud2b8\ub9bc \ub370\uc774\ud130\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.")),(0,a.kt)("h3",{id:"event-vs-pipe"},"Event vs Pipe"),(0,a.kt)("p",null,"\ubaa8\ub4e0 \uc2a4\ud2b8\ub9bc\uc740 EventEmitter\uc758 \uc778\uc2a4\ud134\uc2a4 \uc785\ub2c8\ub2e4."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\ub370\uc774\ud130\ub97c \uc77d\uac70\ub098 \uc4f8 \ub54c \uc0ac\uc6a9\ud560 \uc774\ubca4\ud2b8\ub97c \ubc29\ucd9c(emit) \ud569\ub2c8\ub2e4."),(0,a.kt)("li",{parentName:"ul"},"\ud558\uc9c0\ub9cc, pipe \uba54\uc18c\ub4dc\ub97c \uc774\uc6a9\ud558\uba74 \ub354 \uac04\ub2e8\ud558\uac8c \uc2a4\ud2b8\ub9bc \ub370\uc774\ud130\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"reableSrc\n.pipe(transformStream1)\n.pipe(transformStream2)\n.pipe(finalWritableDest)\n")),(0,a.kt)("p",null,"\uc77d\uae30 \uac00\ub2a5\ud55c \uc2a4\ud2b8\ub9bc\uc73c\ub85c\ubd80\ud130 \uc77d\uac70\ub098 \uc4f0\uae30 \uac00\ub2a5\ud55c \uc2a4\ud2b8\ub9bc\uc73c\ub85c \uc4f0\ub294 \uac83 \uc678\uc5d0\ub3c4 pipe \uba54\uc18c\ub4dc\ub294 \uc790\ub3d9\uc73c\ub85c \uba87\uac00\uc9c0 \uc791\uc5c5\uc744 \uad00\ub9ac\ud569\ub2c8\ub2e4."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\uc5d0\ub7ec \ucc98\ub9ac\ub098 \ud30c\uc77c\uc758 \ub05d\ubd80\ubd84 \ucc98\ub9ac,"),(0,a.kt)("li",{parentName:"ul"},"\uc5b4\ub5a4 \uc2a4\ud2b8\ub9bc\uc774 \ub2e4\ub978 \uac83\ub4e4\uc5d0 \ube44\ud574 \ub290\ub9ac\uac70\ub098 \ube60\ub97c \uacbd\uc6b0\ub97c \ucc98\ub9ac\ud569\ub2c8\ub2e4.")),(0,a.kt)("p",null,"\ud558\uc9c0\ub9cc \uc2a4\ud2b8\ub9bc\uc740 \uc9c1\uc811 \uc774\ubca4\ud2b8\uc640 \ud568\uaed8 \uc0ac\uc6a9\ud560\uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'- \uc5ec\uae30 pipe \uba54\uc18c\ub4dc\uac00 \ub370\uc774\ud130\ub97c \uc77d\uace0 \uc4f0\uae30\uc704\ud574 \uc8fc\ub85c \ud558\ub294 \uac83\uc744 \ub098\ud0c0\ub0b4\ub294 \uac04\ub2e8\ud55c \ucf54\ub4dc\uac00 \uc788\uc2b5\ub2c8\ub2e4.\n// readable.pipe(writable)\n \nreadable.on("data", chunk => {\n  writable.write(chunk)\n})\n \nreadable.on("end", () => {\n  writable.end()\n})\n')),(0,a.kt)("h3",{id:"\uc774\ubca4\ud2b8\uc640-\ud568\uc218-\ubaa9\ub85d"},"\uc774\ubca4\ud2b8\uc640 \ud568\uc218 \ubaa9\ub85d"),(0,a.kt)("p",null,"Readable Streams"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Events : data, end, erorr, close, readable"),(0,a.kt)("li",{parentName:"ul"},"Functions : pipe, unpipe / read, unshift, resume / pause, isPaused, setEncoding")),(0,a.kt)("p",null,"Writable Streams"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Events : drain, finsh, erorr, close, pipe/unpipe"),(0,a.kt)("li",{parentName:"ul"},"Functions : write / end / cork, uncork / setDefaultEncoding")),(0,a.kt)("p",null,"\uc774\ubca4\ud2b8\uc640 \ud568\uc218\ub4e4\uc740 \ubcf4\ud1b5 \ud568\uaed8 \uc0ac\uc6a9\ub418\uae30 \ub54c\ubb38\uc5d0 \uc11c\ub85c \uad00\ub828\uc774 \uc788\uc2b5\ub2c8\ub2e4."),(0,a.kt)("p",null,"\uc77d\uae30 \uac00\ub2a5\ud55c \uc2a4\ud2b8\ub9bc\uc5d0\uc11c \uac00\uc7a5 \uc911\uc694\ud55c \uc774\ubca4\ud2b8\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"data \uc774\ubca4\ud2b8: \uc2a4\ud2b8\ub9bc\uc774 \uc18c\ube44\uc790\uc5d0\uac8c \ub370\uc774\ud130 \uccad\ud06c\ub97c \uc804\uc1a1\ud560\ub54c \ubc1c\uc0dd\ud569\ub2c8\ub2e4."),(0,a.kt)("li",{parentName:"ul"},"end \uc774\ubca4\ud2b8: \ub354 \uc774\uc0c1 \uc18c\ube44\ud560 \ub370\uc774\ud130\uac00 \uc5c6\uc744\ub54c \ubc1c\uc0dd\ud569\ub2c8\ub2e4.")),(0,a.kt)("p",null,"\uc4f0\uae30 \uac00\ub2a5\ud55c \uc2a4\ud2b8\ub9bc\uc5d0\uc11c \uac00\uc7a5 \uc911\uc694\ud55c \uc774\ubca4\ud2b8\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"drain \uc774\ubca4\ud2b8: \uc4f0\uae30 \uac00\ub2a5\ud55c \uc2a4\ud2b8\ub9bc\uc774 \ub354 \ub9ce\uc740 \ub370\uc774\ud130\ub97c \uc218\uc2e0\ud560 \uc218 \uc788\ub2e4\ub294 \uc2e0\ud638\uc785\ub2c8\ub2e4."),(0,a.kt)("li",{parentName:"ul"},"finish \uc774\ubca4\ud2b8: \ubaa8\ub4e0 \ub370\uc774\ud130\uac00 \uc2dc\uc2a4\ud15c\uc73c\ub85c \ud50c\ub7ec\uc2dc \ub420\ub54c \uc0dd\uc131\ub429\ub2c8\ub2e4.")),(0,a.kt)("p",null,"\uc774\ubca4\ud2b8\uc640 \ud568\uc218\ub294 \ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ub41c \uc2a4\ud2b8\ub9bc\uc744 \uc0ac\uc6a9\ud558\uae30 \uc704\ud574 \ud568\uaed8 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\uc77d\uae30 \uac00\ub2a5\ud55c \uc2a4\ud2b8\ub9bc\uc744 \uc0ac\uc6a9\ud558\uae30 \uc704\ud574 pipe/unpipe \uba54\uc18c\ub4dc\ub97c \uc0ac\uc6a9\ud558\uac70\ub098 read/unshift/resume \uba54\uc18c\ub4dc\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc4f0\uae30 \uac00\ub2a5\ud55c \uc2a4\ud2b8\ub9bc\uc744 \uc0ac\uc6a9\ud558\uae30 \uc704\ud574 \uc6b0\ub9ac\ub294 \uc774\uac83\uc744 pipe/unpip\uc758 \uc885\ucc29\uc810\uc73c\ub85c \ub9cc\ub4e4\uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\ud639\uc740 write \uba54\uc18c\ub4dc\ub85c \uc4f0\uace0 \ub05d\ub0a0\ub54c done \uba54\uc18c\ub4dc\ub97c \ud638\ucd9c\ud558\uba74 \ub429\ub2c8\ub2e4."),(0,a.kt)("h3",{id:"\uc77d\uae30-\uac00\ub2a5\ud55c-\uc2a4\ud2b8\ub9bc\uc758-\uc77c\uc2dc-\uc815\uc9c0-\ubaa8\ub4dc\uc640-\ud750\ub984-\ubaa8\ub4dc"},"\uc77d\uae30 \uac00\ub2a5\ud55c \uc2a4\ud2b8\ub9bc\uc758 \uc77c\uc2dc \uc815\uc9c0 \ubaa8\ub4dc\uc640 \ud750\ub984 \ubaa8\ub4dc"),(0,a.kt)("p",null,"\uc77d\uae30 \uac00\ub2a5\ud55c \uc2a4\ud2b8\ub9bc\uc740 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ubc29\ubc95\uc5d0 \uc601\ud5a5\uc744 \uc8fc\ub294 \ub450 \uac00\uc9c0 \uc8fc\uc694 \ubaa8\ub4dc\uac00 \uc788\uc2b5\ub2c8\ub2e4."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\uc77c\uc2dc \uc815\uc9c0 (Pause) \ubaa8\ub4dc"),(0,a.kt)("li",{parentName:"ul"},"\ud750\ub984 (Flowing) \ubaa8\ub4dc")),(0,a.kt)("p",null,"\ub450 \uac1c\ub294 \ud480(pull), \ud478\uc2dc(push) \ubaa8\ub4dc\ub77c\uace0\ub3c4 \ud569\ub2c8\ub2e4."),(0,a.kt)("p",null,"\uae30\ubcf8\uc801\uc73c\ub85c \ubaa8\ub4e0 \uc77d\uae30 \uac00\ub2a5\ud55c \uc2a4\ud2b8\ub9bc\uc740 \uc77c\uc2dc\uc815\uc9c0 \ubaa8\ub4dc\uc5d0\uc11c \uc2dc\uc791\ud558\uc9c0\ub9cc,"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\ud544\uc694\uc5d0 \ub530\ub77c \ud750\ub984 \ubaa8\ub4dc\ub85c \ubcc0\uacbd\ub418\uac70\ub098 \uc77c\uc2dc \uc815\uc9c0 \ubaa8\ub4dc\ub85c \ub418\ub3cc\uc544\uac08 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4."),(0,a.kt)("li",{parentName:"ul"},"\uac00\ub054\uc740 \uc790\ub3d9\uc73c\ub85c \uc2a4\uc704\uce6d \ub418\uae30\ub3c4 \ud569\ub2c8\ub2e4.")),(0,a.kt)("p",null,"1) \uc77d\uae30\uac00\ub2a5\ud55c \uc2a4\ud2b8\ub9bc\uc774 -  \uc77c\uc2dc\uc815\uc9c0 \ubaa8\ub4dc\uc77c \ub54c,"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\uc2a4\ud2b8\ub9bc\uc744 \uc77d\uae30 \uc704\ud574 read() \uba54\uc18c\ub4dc\ub97c \ud638\ucd9c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.")),(0,a.kt)("p",null,"2) \uc77d\uae30\uac00\ub2a5\ud55c \uc2a4\ud2b8\ub9bc\uc774 - \ud750\ub984 \ubaa8\ub4dc\uc77c \ub54c,"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\ud558\uc9c0\ub9cc \ud750\ub984 \ubaa8\ub4dc\uc77c \uacbd\uc6b0\uc5d0\ub294 \ub370\uc774\ud130\uac00 \uc5f0\uc18d\uc801\uc73c\ub85c \ud750\ub974\uace0 \uc788\uace0 \uc6b0\ub9ac\ub294 \uc774\uac83\uc744 \uae30\ub2e4\ub824\uc57c \ud569\ub2c8\ub2e4."),(0,a.kt)("li",{parentName:"ul"},"\ub9cc\uc57d \uc774\uac83\uc744 \uc218\uc2e0\ud560 \uc18c\ube44\uc790\uac00 \uc5c6\uc73c\uba74 \ub370\uc774\ud130\ub294 \uc0ac\ub77c\uc9c0\uac8c \ub429\ub2c8\ub2e4.")),(0,a.kt)("p",null,"\uc218\ub3d9\uc73c\ub85c \ub450 \ubaa8\ub4dc \uac04\uc5d0 \ubcc0\uacbd\ud558\ub824\uba74 resume(), pause() \uba54\ub3c4\ub4dc\ub97c \uc0ac\uc6a9\ud558\uba74 \ub429\ub2c8\ub2e4.\npipe \uba54\uc18c\ub4dc\ub85c \uc77d\uae30 \uac00\ub2a5\ud55c \uc2a4\ud2b8\ub9bc\uc744 \uc0ac\uc6a9\ud560 \ub54c\ub294 \ub450 \ubaa8\ub4dc\ub97c \uc2e0\uacbd\uc4f0\uc9c0 \uc54a\uc544\ub3c4 \ub429\ub2c8\ub2e4. pipe \uac00 \uc790\ub3d9\uc73c\ub85c \uad00\ub9ac\ud558\uae30 \ub54c\ubb38\uc774\uc8e0."),(0,a.kt)("h2",{id:"examples"},"examples"),(0,a.kt)("h3",{id:"eg01-stdin--stdout-\uc2a4\ud2b8\ub9bc--pipe-"},"eg01 stdin > stdout \uc2a4\ud2b8\ub9bc ( pipe )"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// eg, stdin > stdout \uc2a4\ud2b8\ub9bc\n// 1. \uc544\ub798\ucc98\ub7fc pipe\ub97c \ud558\ub098\ub85c\ub9cc \uc5f0\uacb0.\nprocess.stdin.map((e) => String(e).toUpperCase()).pipe(process.stdout);\n")),(0,a.kt)("h3",{id:"eg02-transform--pipe-"},"eg02 Transform ( pipe )"),(0,a.kt)("p",null,"Transform \uc0ac\uc6a9\ubc95"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"transform - chunk, push, callback"),(0,a.kt)("li",{parentName:"ul"},"writableObjectMode, readableObjectMode")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import { Transform } from "stream";\n \n// eg,\n// stream \uc758 object \ubaa8\ub4dc\ub97c \uc0ac\uc6a9\ud574\uc11c, \ucf54\ub4dc\ub85c \ucc98\ub9ac \uac00\ub2a5\ud55c Object \ub2e8\uc704\uc758 \uc2a4\ud2b8\ub9bc \ud30c\uc774\ud504\ub77c\uc778\uc744 \uad6c\uc131\ud558\uc790.\n \n// process.stdin            // 1.\uc0ac\uc6a9\uc790\uc758 \uc785\ub825\n//   .pipe(commaSplitter)   // 2.\ucf64\ub9c8\ub85c \ubd84\ub9ac (\ucd9c\ub825=objectMode)\n//   .pipe(arrayToObject)   // 3.Object \ub9cc\ub4e4\uae30 (\uc785\ucd9c\ub825=objectMode)\n//   .pipe(objectToString)  // 4.String\uc73c\ub85c \ub9cc\ub4e4\uae30  (\uc785\ub825=objectMode)\n//   .pipe(process.stdout); // 5.console \ucd9c\ub825\n \nconst commaSplitter = new Transform({\n  // writableObjectMode: true, // IN - string is ok\n  readableObjectMode: true, // OUT\n  transform(chunk, encoding, callback) {\n    console.log("--\x3e[1] commaSplitter chunk", chunk);\n    console.log("--\x3e[1] commaSplitter chunk(string)", chunk.toString("utf-8"));\n \n    this.push(chunk.toString().trim().split(","));\n    callback();\n  },\n});\n \nconst arrayToObject = new Transform({\n  writableObjectMode: true, // IN\n  readableObjectMode: true, // OUT\n \n  transform(chunk, encoding, callback) {\n    console.log("--\x3e[2] arrayToObject chunk", chunk);\n    const obj = {};\n    for (let i = 0; i < chunk.length; i += 2) {\n      obj[chunk[i]] = chunk[i + 1];\n    }\n    this.push(obj);\n    callback();\n  },\n});\n \nconst objectToString = new Transform({\n  writableObjectMode: true,\n  // readableObjectMode: true, // OUT - string is ok\n  transform(chunk, encoding, callback) {\n    console.log("--\x3e[3] objectToString chunk", chunk);\n    this.push(JSON.stringify(chunk) + "\\n");\n    callback();\n  },\n});\n \nprocess.stdin\n  .pipe(commaSplitter)\n  .pipe(arrayToObject)\n  .pipe(objectToString)\n  .pipe(process.stdout);\n')),(0,a.kt)("h3",{id:"eg03-transform--event-pipe-"},"eg03 Transform ( event, pipe )"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import express from "express";\nimport { Readable, Transform, Writable } from "stream";\nimport { readFileSync, createReadStream, createWriteStream } from "fs";\n \n// eg,\n \nfunction getUserByIdMocked(cursor) {\n  const tmp = [];\n  for (let i = 0; i < 1; i++) {\n    const data = {\n      name: `User-${cursor}-${i}`,\n      cursor,\n      at: Date.now(),\n    };\n    tmp.push(JSON.stringify(data));\n  }\n  return `${tmp.join()}` + ",";\n}\n \nconst userDBReadableStream = (() => {\n  const totalCount = 10;\n  const readableStream = new Readable({\n    read(size) {\n      // console.log("--\x3ereadableStream read event");\n      // console.log(`\u3134cursor : ${this.currentCursor} / size : ${size}`);\n \n      const str = getUserByIdMocked(this.currentCursor);\n      this.push(str + "\\n");\n      this.currentCursor += 1; // \uc77d\uae30 \ucee4\uc11c\n \n      // \ubaa8\ub4e0 \ub370\uc774\ud130\ub97c \uc77d\uc740 \uacbd\uc6b0, null\uc744 \ubcf4\ub0b8\ub2e4.\n      if (this.currentCursor >= totalCount) {\n        this.push(null); // finished\n      }\n    },\n  });\n \n  readableStream.currentCursor = 0;\n  readableStream.totalCount = totalCount;\n  return readableStream;\n})();\n \nconst progressStream = new Transform({\n  transform(chunk, encoding, callback) {\n    const progress =\n      (\n        userDBReadableStream.currentCursor / userDBReadableStream.totalCount\n      ).toFixed(2) * 100;\n    callback(null, chunk);\n  },\n});\n \nlet finalWriteStream = null;\n// const finalWriteStream = createWriteStream("eg3-response.json", {\n//   flags: "w",\n//   encoding: "utf8",\n// });\n \nconst myWritableStream = new Writable({\n  write(chunk, encodeing, callback) {\n    // \uc2a4\ud2b8\ub9bc\uc744 \ub2e4\ub974\uac8c \uc124\uc815\ud558\uc9c0 \uc54a\ub294\ub2e4\uba74 chunk\ub294 \ubcf4\ud1b5 \ubc84\ud37c\uc785\ub2c8\ub2e4.\n    // \uc704\uc5d0\uc11c\ub294 encoding \uc778\uc790\ub97c \uc37c\uc9c0\ub9cc \ubcf4\ud1b5\uc740 \ubb34\uc2dc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n    // callback\uc740 \ub370\uc774\ud130 \uccad\ud06c\ub97c \ucc98\ub9ac\ud55c \ub4a4\uc5d0 \ud638\ucd9c\ub418\ub294 \ud568\uc218 \uc785\ub2c8\ub2e4.\n    // - \uc4f0\uae30\ub97c \uc131\uacf5\ud588\uc9c0\ub294 \uc5ec\ubd80\ub97c \uc54c\ub9ac\ub294 \uc2e0\ud638\uc785\ub2c8\ub2e4. \uc2e4\ud328\ub97c \uc54c\ub9ac\ub824\uba74 \uc5d0\ub7ec \uac1d\uccb4\uc640 \ud568\uaed8 \ucf5c\ubc31\uc744 \ud638\ucd9c\ud558\uba74 \ub429\ub2c8\ub2e4.\n    console.log(chunk.toString());\n    callback();\n  },\n});\n \nfinalWriteStream = myWritableStream;\n \n// data \uc774\ubca4\ud2b8: \uc2a4\ud2b8\ub9bc\uc774 \uc18c\ube44\uc790\uc5d0\uac8c \ub370\uc774\ud130 \uccad\ud06c\ub97c \uc804\uc1a1\ud560\ub54c \ubc1c\uc0dd\ud569\ub2c8\ub2e4.\nuserDBReadableStream.on("data", () => {\n  console.log("Event userDBReadableStream data");\n});\n \nuserDBReadableStream.on("error", () => {\n  console.log("Event userDBReadableStream error");\n});\nuserDBReadableStream.on("end", () => {\n  // end \uc774\ubca4\ud2b8: \ub354 \uc774\uc0c1 \uc18c\ube44\ud560 \ub370\uc774\ud130\uac00 \uc5c6\uc744\ub54c \ubc1c\uc0dd\ud569\ub2c8\ub2e4.\n  console.log("Event userDBReadableStream end");\n});\n \nuserDBReadableStream.on("close", () => {\n  // end > close\n  console.log("Event userDBReadableStream close");\n});\n \n// readable \uc774\ubca4\ud2b8\ub97c \uc218\uc2e0\ud558\uac8c \ub418\uba74, read \ub97c \uc9c1\uc811 \ud638\ucd9c\ud558\uc5ec \uad00\ub9ac\ud574\uc57c \ud55c\ub2e4.\nuserDBReadableStream.on("readable", () => {\n  console.log("Event userDBReadableStream readable");\n  // There is some data to read now.\n  let data;\n  while ((data = userDBReadableStream.read()) !== null) {\n    // console.log(data);\n  }\n});\n \n// ========\n \n// progressStream.on("pipe", () => {\n//   // pipe \uc774\ubca4\ud2b8 : pipe \uc5f0\uacb0\ub418\uba74 \uc774\ubca4\ud2b8 \ubc1c\uc0dd\n//   console.log("Event progressStream pipe");\n// });\n \n// progressStream.on("drain", () => {\n//   // drain \uc774\ubca4\ud2b8: \uc4f0\uae30 \uac00\ub2a5\ud55c \uc2a4\ud2b8\ub9bc\uc774 \ub354 \ub9ce\uc740 \ub370\uc774\ud130\ub97c \uc218\uc2e0\ud560 \uc218 \uc788\ub2e4\ub294 \uc2e0\ud638\uc785\ub2c8\ub2e4.\n//   console.log("Event progressStream drain");\n// });\n \n// progressStream.on("finish", () => {\n//   console.log("Event progressStream finish");\n// });\n \n// progressStream.on("error", () => {\n//   console.log("Event progressStream error");\n// });\n \n// progressStream.on("close", () => {\n//   console.log("Event progressStream close");\n// });\n \n// progressStream.on("unpipe", () => {\n//   console.log("Event progressStream unpipe");\n// });\n \n// ====\n// pipe \uc774\ubca4\ud2b8 : pipe \uc5f0\uacb0\ub418\uba74 \uc774\ubca4\ud2b8 \ubc1c\uc0dd\nfinalWriteStream.on("pipe", () => {\n  console.log("Event finalWriteStream pipe");\n});\n \n// drain \uc774\ubca4\ud2b8: \uc4f0\uae30 \uac00\ub2a5\ud55c \uc2a4\ud2b8\ub9bc\uc774 \ub354 \ub9ce\uc740 \ub370\uc774\ud130\ub97c \uc218\uc2e0\ud560 \uc218 \uc788\ub2e4\ub294 \uc2e0\ud638\uc785\ub2c8\ub2e4.\nfinalWriteStream.on("drain", () => {\n  console.log("Event finalWriteStream drain");\n});\n \nfinalWriteStream.on("error", () => {\n  console.log("Event finalWriteStream error");\n});\n \nfinalWriteStream.on("finish", () => {\n  // finish \uc774\ubca4\ud2b8: \ubaa8\ub4e0 \ub370\uc774\ud130\uac00 \uc2dc\uc2a4\ud15c\uc73c\ub85c \ud50c\ub7ec\uc2dc \ub420\ub54c \uc0dd\uc131\ub429\ub2c8\ub2e4.\n  console.log("Event finalWriteStream finish");\n});\n \nfinalWriteStream.on("unpipe", () => {\n  // finish > unpipe > close\n  console.log("Event finalWriteStream unpipe");\n});\n \nfinalWriteStream.on("close", () => {\n  console.log("Event finalWriteStream close");\n});\n \nuserDBReadableStream.pipe(progressStream).pipe(finalWriteStream);\n')),(0,a.kt)("h3",{id:"eg04-bigfile-stream-server"},"eg04 bigFile stream server."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'\nimport express from "express";\nimport { readFileSync, createReadStream } from "fs";\n \nconst PORT = process.env.PORT || 5050;\n \n// eg) bigFile stream server\n \n// 1. make bigfile\n// node -e "process.stdout.write(crypto.randomBytes(2e9))" > big.file\n \n// 2. monitoring process\n// htop\n// - filter > mjs\n// - VIRT : \uac00\uc0c1\uba54\ubaa8\ub9ac / RES : \ubb3c\ub9ac\uba54\ubaa8\ub9ac \uc0ac\uc6a9\ub7c9 \uccb4\ud06c\n \n// check file size\n// ls -alh\n \n// 3. download bigfile(client)\n// curl localhost:5050/1-oom --output down.file\n// \uacb0\uacfc : RES : \ubb3c\ub9ac\uba54\ubaa8\ub9ac \uc0ac\uc6a9\ub7c9 700MB\uae4c\uc9c0 \uc0c1\uc2b9\n \n// curl localhost:5050/2-stream --output down.file\n// \uacb0\uacfc : RES : \ubb3c\ub9ac\uba54\ubaa8\ub9ac \uc0ac\uc6a9\ub7c9 100MB\uae4c\uc9c0 \uc0c1\uc2b9\n \nconst bootstrap = async () => {\n  const app = express();\n \n  app.get("/1-oom", (req, res) => {\n    const file = readFileSync("big.file");\n    res.write(file);\n    return res.end();\n  });\n \n  app.get("/2-stream", (req, res) => {\n    // HTPP \uc751\ub2f5\uac1d\uccb4\ub294 \uc4f0\uae30 \uac00\ub2a5\ud55c \uac1d\uccb4\uc774\ub2e4.\n    createReadStream("big.file").pipe(res);\n  });\n \n  app.listen(PORT, () => {\n    console.log(`Example app listening on port ${PORT}`);\n  });\n};\n \nbootstrap();\n\n// eg) bigFile stream server\n\n// 1. make bigfile\n// node -e "process.stdout.write(crypto.randomBytes(2e9))" > big.file\n\n// 2. monitoring process\n// htop\n// - filter > mjs\n// - VIRT : \uac00\uc0c1\uba54\ubaa8\ub9ac / RES : \ubb3c\ub9ac\uba54\ubaa8\ub9ac \uc0ac\uc6a9\ub7c9 \uccb4\ud06c\n\n// check file size\n// ls -alh\n\n// 3. download bigfile(client)\n// curl localhost:5050/1-oom --output down.file\n// \uacb0\uacfc : RES : \ubb3c\ub9ac\uba54\ubaa8\ub9ac \uc0ac\uc6a9\ub7c9 700MB\uae4c\uc9c0 \uc0c1\uc2b9\n\n// curl localhost:5050/2-stream --output down.file\n// \uacb0\uacfc : RES : \ubb3c\ub9ac\uba54\ubaa8\ub9ac \uc0ac\uc6a9\ub7c9 100MB\uae4c\uc9c0 \uc0c1\uc2b9\n\n\uc2e4\ud5d8 \ud658\uacbd : M1 Mac\n')),(0,a.kt)("h3",{id:"eg05-db-readable-stream"},"eg05 DB readable stream."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'// eg05-server.mjs\n \nimport express from "express";\nimport { readFileSync, createReadStream } from "fs";\nimport { Readable, Transform, Writable } from "stream";\nimport { randomUUID } from "crypto";\n \nconst PORT = process.env.PORT || 5050;\nconst INDEX_1GM = 10_000_000;\n \n// eg) server to server stream ( csv download )\n// server [ read csv > http response ] >>>  client [ http request > file ] with stream pipe\n// ( not object mode )\n \n// read DB\nfunction getUserByIdMocked(cursor) {\n  const tmp = [];\n  for (let i = 0; i < 100; i++) {\n    const data = {\n      id: randomUUID(),\n      name: `User-${cursor}-${i}`,\n      cursor,\n      at: Date.now(),\n    };\n    tmp.push(JSON.stringify(data));\n  }\n  return `${tmp.join()}` + ",";\n}\n \n// point1.\n// chunk\n// - For streams not operating in object mode, chunk must be a string,\n// - Buffer or Uint8Array. For object mode streams\n \nconst bootstrap = async () => {\n  const app = express();\n \n  app.get("/1-readable", (req, res) => {\n    const totalCount = 1_000;\n \n    const readableStream = Readable({\n      read(size) {\n        // \uc2a4\ud2b8\ub9bc\uc740 \ubc84\ud37c\uac00 \ucc30\ub54c\uae4c\uc9c0 read \uc5ec\ub7ec\ubc88 \ud638\ucd9c\ud558\uc5ec \uccad\ud06c\ub370\uc774\ud130\ub97c \uc694\uccad\ud55c\ub2e4.\n        // \uc77d\uae30 \ub85c\uc9c1\uc744 \ud1b5\ud574 \ub370\uc774\ud130\ub97c Push\ud55c\ub2e4.\n        // \ub2e4\uc6b4\uc2a4\ud2b8\ub9bc\uc5d0\uc11c \ub370\uc774\ud130\ub97c \ub2e4 \uc18c\ud654\ud558\uba74 \ub2e4\uc2dc read\uac00 \ud638\ucd9c\ub41c\ub2e4. \uc774\ub294 pipe\ud568\uc218\uc5d0 \uc758\ud574 \uad00\ub9ac\ub41c\ub2e4.\n        console.log("--\x3ereadableStream read event");\n        console.log(`\u3134cursor : ${this.currentCursor} / size : ${size}`);\n \n        const str = getUserByIdMocked(this.currentCursor);\n        this.push(str);\n        this.currentCursor += 1; // \uc77d\uae30 \ucee4\uc11c\n \n        // \ubaa8\ub4e0 \ub370\uc774\ud130\ub97c \uc77d\uc740 \uacbd\uc6b0, null\uc744 \ubcf4\ub0b8\ub2e4.\n        if (this.currentCursor >= totalCount) {\n          this.push(null); // finished\n        }\n      },\n    });\n    readableStream.currentCursor = 0;\n \n    const progressStream = new Transform({\n      transform(chunk, encoding, callback) {\n        const progress =\n          (readableStream.currentCursor / totalCount).toFixed(2) * 100;\n        console.log(`--\x3eprogressStream ${progress}%`);\n        callback(null, chunk);\n      },\n    });\n \n    readableStream\n      .pipe(progressStream)\n      .pipe(res)\n      .on("end", () => console.log("Event end"))\n      .on("finish", () => console.log("Event finish"))\n      .on("error", () => console.log("Event error"));\n  });\n \n  app.listen(PORT, () => {\n    console.log(`Example app listening on port ${PORT}`);\n  });\n};\n \nbootstrap();\n \n \n---\n \n// eg05-client.mjs\n \nimport express from "express";\nimport { readFileSync, createReadStream, createWriteStream } from "fs";\nimport { Readable, Writable, Duplex, Transform } from "stream";\nimport { randomUUID } from "crypto";\nimport { get } from "http";\n \nconst url = "http://localhost:5050/1-readable";\n \nconst getHttpStream = () =>\n  new Promise((resolve) => get(url, (response) => resolve(response)));\n \nconst httpReadableStream = await getHttpStream();\n \nconst monitoringStream = Transform({\n  transform(chunk, enc, cb) {\n    cb(null, chunk); // pass through\n  },\n});\n \nconst fileWriteStream = createWriteStream("response.json", {\n  flags: "w",\n  encoding: "utf8",\n});\n \nhttpReadableStream.pipe(monitoringStream).pipe(fileWriteStream);\n')),(0,a.kt)("h3",{id:"eg06-gzip-readable-stream"},"eg06 gzip readable stream."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import express from "express";\nimport { Readable, Transform, Writable } from "stream";\nimport { readFileSync, createReadStream, createWriteStream } from "fs";\nimport crypto from "crypto";\nimport zlib from "zlib";\n// eg,\n \nfunction getUserByIdMocked(cursor) {\n  const tmp = [];\n  for (let i = 0; i < 1; i++) {\n    const data = {\n      name: `User-${cursor}-${i}`,\n      cursor,\n      at: Date.now(),\n    };\n    tmp.push(JSON.stringify(data));\n  }\n  return `${tmp.join()}` + ",";\n}\n \nconst userDBReadableStream = (() => {\n  const totalCount = 10;\n  const readableStream = new Readable({\n    read(size) {\n      // console.log("--\x3ereadableStream read event");\n      // console.log(`\u3134cursor : ${this.currentCursor} / size : ${size}`);\n \n      const str = getUserByIdMocked(this.currentCursor);\n      this.push(str + "\\n");\n      this.currentCursor += 1; // \uc77d\uae30 \ucee4\uc11c\n \n      // \ubaa8\ub4e0 \ub370\uc774\ud130\ub97c \uc77d\uc740 \uacbd\uc6b0, null\uc744 \ubcf4\ub0b8\ub2e4.\n      if (this.currentCursor >= totalCount) {\n        this.push(null); // finished\n      }\n    },\n  });\n \n  readableStream.currentCursor = 0;\n  readableStream.totalCount = totalCount;\n  return readableStream;\n})();\n \nconst progressStream = new Transform({\n  transform(chunk, encoding, callback) {\n    const progress =\n      (\n        userDBReadableStream.currentCursor / userDBReadableStream.totalCount\n      ).toFixed(2) * 100;\n    callback(null, chunk);\n  },\n});\n \nconst finalWriteStream = createWriteStream("eg6-response.json.gz");\n \nuserDBReadableStream\n  .pipe(progressStream)\n  .pipe(zlib.createGzip())\n  .pipe(finalWriteStream)\n  .on("finish", () => console.log("Done"));\n\n')),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"stream-in-browser-eg1-dom\uc5d0-\uc2a4\ud2b8\ub9bc-\ub79c\ub354\ub9c1"},"Stream in Browser eg1 DOM\uc5d0 \uc2a4\ud2b8\ub9bc \ub79c\ub354\ub9c1"),(0,a.kt)("p",null,"\ubb38\uc790\uc5f4\uc744 \uc2a4\ud2b8\ub9bc\uc73c\ub85c \ub9cc\ub4e4\uc5b4 DOM\uc5d0 \ud14d\uc2a4\ud2b8 \uc791\uc131"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'\n// https://web.dev/streams/#%EC%93%B0%EA%B8%B0-%EA%B0%80%EB%8A%A5%ED%95%9C-%EC%8A%A4%ED%8A%B8%EB%A6%BC-%EC%BD%94%EB%93%9C-%EC%83%98%ED%94%8C\n \nconst bootstrap = async () => {\n \n  const writableStream = new WritableStream({\n    start(controller) {\n      console.log("[start]");\n    },\n    async write(chunk, controller) {\n      console.log("[write]", chunk);\n      // Wait for next write.\n      await new Promise((resolve) =>\n        setTimeout(() => {\n          document.body.textContent += chunk;\n          resolve();\n        }, 1_000)\n      );\n    },\n    close(controller) {\n      console.log("[close]");\n    },\n    abort(reason) {\n      console.log("[abort]", reason);\n    },\n  });\n \n \n  const writer = writableStream.getWriter();\n  const start = Date.now();\n  for (const char of "abcdefghijklmnopqrstuvwxyz") {\n    // Wait to add to the write queue.\n    await writer.ready;\n    console.log("[ready]", Date.now() - start, "ms");\n    // The Promise is resolved after the write finishes.\n    writer.write(char);\n  }\n  await writer.close();\n};\n// bootstrap()\n\n')),(0,a.kt)("h3",{id:"stream-in-browser-eg2-\ud30c\uc77c\uc77d\uae30-\uc4f0\ud2b8\ub9bc"},"Stream in Browser eg2 \ud30c\uc77c\uc77d\uae30 \uc4f0\ud2b8\ub9bc"),(0,a.kt)("p",null,"\uc751\ub2f5 \uc2a4\ud2b8\ub9bc\uc73c\ub85c DOM\uc5d0 \ud14d\uc2a4\ud2b8 \uc791\uc131"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'// https://developer.mozilla.org/en-US/docs/Web/API/TransformStream/TransformStream\n \nfunction upperCaseStream() {\n  return new TransformStream({\n    transform(chunk, controller) {\n      controller.enqueue(chunk.toUpperCase());\n    },\n  });\n}\n \nfunction appendToDOMStream(el) {\n  return new WritableStream({\n    write(chunk) {\n      el.append(chunk);\n    },\n  });\n}\n \nfetch("./lorem-ipsum.txt").then((response) =>\n  response.body\n    .pipeThrough(new TextDecoderStream())\n    .pipeThrough(upperCaseStream())\n    .pipeTo(appendToDOMStream(document.body))\n);\n')),(0,a.kt)("h3",{id:"stream-in-browser-eg3-\ud30c\uc77c-\uc800\uc7a5"},"Stream in Browser eg3 \ud30c\uc77c \uc800\uc7a5"),(0,a.kt)("p",null,"\ubb38\uc790\uc5f4\uc744 \uc2a4\ud2b8\ub9bc\uc73c\ub85c \ub9cc\ub4e4\uc5b4 \ud2b9\uc815 \ub514\ub809\ud130\ub9ac\uc5d0 \ud30c\uc77c \uc800\uc7a5"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'// https://developer.chrome.com/articles/file-system-access/#create-a-new-file\nconst options = {\n  suggestedName: "Untitled Text.txt",\n  types: [\n    {\n      description: "Text documents",\n      accept: {\n        "text/plain": [".txt"],\n      },\n    },\n  ],\n};\n \nconst bootstrap = async () => {\n  const sleep = (ms) => new Promise((res) => setTimeout(res, ms));\n  const fileHandle = await window.showSaveFilePicker(options);\n \n  // Create a FileSystemWritableFileStream to write to.\n  const writable = await fileHandle.createWritable();\n  // Write the contents of the file to the stream.\n  await writable.write("231231231");\n  await writable.write("asfdsafdas");\n  await sleep(1500);\n  // Close the file and write the contents to disk.\n  await writable.close();\n};\n \nbootstrap();\n')),(0,a.kt)("p",null,"\ubb38\uc81c : \ud558\ub2e8\uc758 download dialog \ub85c \ub098\uc624\uc9c0 \uc54a\uc74c"))}u.isMDXComponent=!0}}]);