"use strict";(self.webpackChunkdosimpact_blog=self.webpackChunkdosimpact_blog||[]).push([[78597],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>k});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),l=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},c=function(e){var n=l(e.components);return r.createElement(p.Provider,{value:n},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=l(t),u=a,k=m["".concat(p,".").concat(u)]||m[u]||d[u]||o;return t?r.createElement(k,s(s({ref:n},c),{},{components:t})):r.createElement(k,s({ref:n},c))}));function k(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=u;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i[m]="string"==typeof e?e:a,s[1]=i;for(var l=2;l<o;l++)s[l]=t[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},75573:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var r=t(87462),a=(t(67294),t(3905));const o={sidebar_position:5},s="kafka example with nestjs, python",i={unversionedId:"g-be/kafka/ka005",id:"g-be/kafka/ka005",title:"kafka example with nestjs, python",description:"what to do",source:"@site/docs/g-be/3-kafka/ka005.md",sourceDirName:"g-be/3-kafka",slug:"/g-be/kafka/ka005",permalink:"/docs/g-be/kafka/ka005",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/g-be/3-kafka/ka005.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"backEnd",previous:{title:"\ucd08\ubcf4\uc790\ub97c \uc704\ud55c kafka-3 CLI",permalink:"/docs/g-be/kafka/ka004"},next:{title:"4.ElasticSearch",permalink:"/docs/category/4elasticsearch"}},p={},l=[{value:"what to do",id:"what-to-do",level:2},{value:"\uad6c\uc131 = nestjs \uc11c\ubc84 3 + python \uc11c\ubc84 1",id:"\uad6c\uc131--nestjs-\uc11c\ubc84-3--python-\uc11c\ubc84-1",level:3},{value:"\uc808\ucc28",id:"\uc808\ucc28",level:3},{value:"\ucd94\uac00 \uc124\uba85",id:"\ucd94\uac00-\uc124\uba85",level:3},{value:"1.kafka install with docker",id:"1kafka-install-with-docker",level:2},{value:"2.nest js",id:"2nest-js",level:2},{value:"api-gateway",id:"api-gateway",level:3},{value:"billing",id:"billing",level:3},{value:"auth",id:"auth",level:3},{value:"3.python",id:"3python",level:2},{value:"install",id:"install",level:3},{value:"main.py",id:"mainpy",level:3},{value:"ref",id:"ref",level:2}],c={toc:l},m="wrapper";function d(e){let{components:n,...o}=e;return(0,a.kt)(m,(0,r.Z)({},c,o,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"kafka-example-with-nestjs-python"},"kafka example with nestjs, python"),(0,a.kt)("h2",{id:"what-to-do"},"what to do"),(0,a.kt)("p",null,(0,a.kt)("img",{src:t(61129).Z,width:"908",height:"669"})),(0,a.kt)("h3",{id:"\uad6c\uc131--nestjs-\uc11c\ubc84-3--python-\uc11c\ubc84-1"},"\uad6c\uc131 = nestjs \uc11c\ubc84 3 + python \uc11c\ubc84 1"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"nestjs-api-gw"),(0,a.kt)("li",{parentName:"ol"},"nestjs-billing"),(0,a.kt)("li",{parentName:"ol"},"nestjs-auth"),(0,a.kt)("li",{parentName:"ol"},"python-fastAPI")),(0,a.kt)("h3",{id:"\uc808\ucc28"},"\uc808\ucc28"),(0,a.kt)("p",null,"1 nestjs-api-gw \uac00 order_created \ud1a0\ud53d\uc5d0 \uc0ac\uc6a9\uc790 \uc8fc\ubb38\uad00\ub828 \uba54\uc2dc\uc9c0 \ubc1c\ud589\n2 nestjs-billing \uac00 \uba54\uc2dc\uc9c0\ub97c \ubc1b\uc544\uc11c \ucc98\ub9ac\ud55c\ub2e4. get_user\ub77c\ub294 \ud1a0\ud53d\uc744 \ubc1c\ud589 \ubc0f \ud1a0\ud53d\uc744 \uad6c\ub3c5\n3 nestjs-auth \uac00 get_user \ud1a0\ud53d\uc758 \uba54\uc2dc\uc9c0\ub97c \ubc1b\uc544\uc11c \ub0b4\uc6a9\uc744 \ub9ac\ud134\ud55c\ub2e4. (\uc774\ub294 get_user.reply \ud1a0\ud53d\uc73c\ub85c \ubc1c\ud589\ub428 )",(0,a.kt)("br",{parentName:"p"}),"\n","4 nestjs-billing \uac00 \uc751\ub2f5\uc744 \ubc1b\ub294\ub2e4.",(0,a.kt)("br",{parentName:"p"}),"\n","5 python-fastAPI\uac00 1\ubc88\uc5d0 \uc758\ud574, order_created \ud1a0\ud53d\uc5d0 \ubc1c\ud589\ub41c \uba54\uc2dc\uc9c0\ub97c \ubc1b\uace0 \ucf58\uc194 \ucd9c\ub825 \ud55c\ub2e4.   "),(0,a.kt)("h3",{id:"\ucd94\uac00-\uc124\uba85"},"\ucd94\uac00 \uc124\uba85"),(0,a.kt)("p",null,"1\ubc88 \uc808\ucc28\uc5d0\uc11c\ub294 \uba54\uc2dc\uc9c0\ub97c \ub2e8\ubc29\ud5a5\uc73c\ub85c \ud750\ub974\uac8c \ud588\ub2e4. emit \ud568\uc218\ub85c \ubcf4\ub0b4\uace0 EventPattern \uc73c\ub85c \ubc1b\ub294\ub2e4.",(0,a.kt)("br",{parentName:"p"}),"\n","2\ubc88 \uc808\ucc28\uc5d0\uc11c\ub294 \uba54\uc2dc\uc9c0\ub97c \uc591\ubc61\ud5a5\uc73c\ub85c \uc8fc\uace0\ubc1b\uac8c \ud588\ub2e4.  "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\ub0b4\ubd80\uc801\uc73c\ub85c\ub294 2\uac1c\uc758 \ud1a0\ud53d\uc73c\ub85c \ub2e8\ubc29\ud5a5\uc73c\ub85c \uad6c\ud604\ub41c\ub2e4.  "),(0,a.kt)("li",{parentName:"ul"},"\uc1a1\uc2e0\uc790 : \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\uc11c\ub294 send, subscribe\ub77c\ub294 \uba54\uc11c\ub4dc\ub85c \ubc14\uc778\ub529 \uc2dc\ud0a8\ub2e4.   "),(0,a.kt)("li",{parentName:"ul"},"\uc218\uc2e0\uc790 : EventPattern\uc73c\ub85c \ubc1b\ub294\ub2e4.  ")),(0,a.kt)("h2",{id:"1kafka-install-with-docker"},"1.kafka install with docker"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/g-be/kafka/ka003"},"kafka install with docker")),(0,a.kt)("h2",{id:"2nest-js"},"2.nest js"),(0,a.kt)("p",null,"git repo : ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/mguay22/nestjs-kafka-microservices"},"https://github.com/mguay22/nestjs-kafka-microservices")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"nvm use 18\nnpm i -g @nestjs/cli\n\nnest new api-gateway\nnest new billing\nnest new auth\n\nyarn add @nestjs/microservices kafkajs\n")),(0,a.kt)("h3",{id:"api-gateway"},"api-gateway"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"\n// 1. \uce74\ud504\uce74 \ubaa8\ub4c8 import\nimport { Module } from '@nestjs/common';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\n\n@Module({\n  imports: [\n    ClientsModule.register([\n      {\n        name: 'BILLING_SERVICE', // DI token \n        transport: Transport.KAFKA, \n        options: {\n          client: {\n            clientId: 'billing', // \ub2e4\ub978 \ud074\ub77c\uc774\uc5b8\ud2b8\uc640 \uc2dd\ubcc4\uc774 \ub418\uc5b4\uc57c \ud558\ub294\uac00?\n            brokers: ['localhost:10000','localhost:10001','localhost:10002'], // \ud074\ub7ec\uc2a4\ud130\uc778 \uacbd\uc6b0 \ubaa8\ub4e0 \ube0c\ub85c\ucee4 \uc785\ub825\n          },\n          consumer: {\n            groupId: 'billing-consumer', // \ud544\uc694\uc5c6\ub294\ub4ef?\n          },\n        },\n      },\n    ]),\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n---\n// 2. \uc11c\ube44\uc2a4 inject\nimport { Inject, Injectable } from '@nestjs/common';\nimport { ClientKafka } from '@nestjs/microservices';\nimport { CreateOrderRequest } from './create-order-request.dto';\nimport { OrderCreatedEvent } from './order-created.event';\n\n@Injectable()\nexport class AppService {\n  constructor(\n    @Inject('BILLING_SERVICE') private readonly billingClient: ClientKafka,\n  ) {}\n\n  createOrder({ userId, price }: CreateOrderRequest) {\n    // emit \uba54\uc11c\ub4dc\ub97c \uc774\uc6a9\ud574\uc11c \uba54\uc2dc\uc9c0 \ubc1c\ud589\n    this.billingClient.emit(\n      'order_created', // \ud1a0\ud53d\n      new OrderCreatedEvent('125', userId, price), // \uba54\uc2dc\uc9c0 \uac12\n    );\n  }\n}\n\n")),(0,a.kt)("h3",{id:"billing"},"billing"),(0,a.kt)("p",null,"\ub9c8\uc774\ud06c\ub85c\uc11c\ube44\uc2a4\ub85c, \ud3ec\ud2b8 \uc624\ud508\uc5c6\uc774 \uce74\ud504\uce74 \uad6c\ub3c5 \ud6c4 \ud504\ub85c\uc138\uc2a4 \uc791\ub3d9\uc2dc\ud0a8\ub2e4. "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"//1. main.ts\nimport { NestFactory } from '@nestjs/core';\nimport { MicroserviceOptions, Transport } from '@nestjs/microservices';\nimport { AppModule } from './app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.createMicroservice<MicroserviceOptions>(\n    AppModule,\n    {\n      transport: Transport.KAFKA,\n      options: {\n        client: {\n          brokers: ['localhost:10000','localhost:10001','localhost:10002'],\n        },\n        consumer: {\n          groupId: 'billing-consumer',\n        },\n      },\n    },\n  );\n  app.listen();\n}\nbootstrap();\n\n---\n//2. app.module.ts\nimport { Module } from '@nestjs/common';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\n\n@Module({\n  imports: [\n    ClientsModule.register([\n      {\n        name: 'AUTH_SERVICE',\n        transport: Transport.KAFKA,\n        options: {\n          client: {\n            clientId: 'auth',\n            brokers: ['localhost:10000','localhost:10001','localhost:10002'],\n          },\n          consumer: {\n            groupId: 'auth-consumer',\n          },\n        },\n      },\n    ]),\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n---\n//3. app.controller.ts\nimport { Controller, Get, Inject, OnModuleInit } from '@nestjs/common';\nimport { ClientKafka, EventPattern } from '@nestjs/microservices';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController implements OnModuleInit {\n  constructor(\n    private readonly appService: AppService,\n    @Inject('AUTH_SERVICE') private readonly authClient: ClientKafka,\n  ) {}\n\n  @EventPattern('order_created')\n  handleOrderCreated(data: any) {\n    console.log(\"--\x3edata\",data);\n    this.appService.handleOrderCreated(data.value);\n  }\n\n  onModuleInit() {\n    this.authClient.subscribeToResponseOf('get_user');\n  }\n}\n\n---\n// 4. app.service.ts\nimport { Inject, Injectable } from '@nestjs/common';\nimport { ClientKafka } from '@nestjs/microservices';\nimport { GetUserRequest } from './get-user-request.dto';\nimport { OrderCreatedEvent } from './order-created.event';\n\n@Injectable()\nexport class AppService {\n  constructor(\n    @Inject('AUTH_SERVICE') private readonly authClient: ClientKafka,\n  ) {}\n\n  handleOrderCreated(orderCreatedEvent: OrderCreatedEvent) {\n    this.authClient\n      .send('get_user', new GetUserRequest(orderCreatedEvent.userId))\n      .subscribe((user) => {\n        console.log(\n          `Billing user with stripe ID ${user.stripeUserId} a price of $${orderCreatedEvent.price}...`,\n        );\n      });\n  }\n}\n\n\n\n")),(0,a.kt)("h3",{id:"auth"},"auth"),(0,a.kt)("p",null,"\ub9c8\uc774\ud06c\ub85c\uc11c\ube44\uc2a4\ub85c, \ud3ec\ud2b8 \uc624\ud508\uc5c6\uc774 \uce74\ud504\uce74 \uad6c\ub3c5 \ud6c4 \ud504\ub85c\uc138\uc2a4 \uc791\ub3d9\uc2dc\ud0a8\ub2e4. "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// 1. main.ts\nimport { NestFactory } from '@nestjs/core';\nimport { MicroserviceOptions, Transport } from '@nestjs/microservices';\nimport { AppModule } from './app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.createMicroservice<MicroserviceOptions>(\n    AppModule,\n    {\n      transport: Transport.KAFKA,\n      options: {\n        client: {\n          brokers: ['localhost:10000','localhost:10001','localhost:10002'],\n        },\n        consumer: {\n          groupId: 'auth-consumer',\n        },\n      },\n    },\n  );\n  app.listen();\n}\nbootstrap();\n---\n// 2.app.controller.ts\nimport { Controller, Get } from '@nestjs/common';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @MessagePattern('get_user')\n  getUser(data: any) {\n    return this.appService.getUser(data.value);\n  }\n}\n\n---\n// 3. app.service.ts\nimport { Injectable } from '@nestjs/common';\nimport { GetUserRequest } from './get-user-request.dto';\n\n@Injectable()\nexport class AppService {\n  private readonly users: any[] = [\n    {\n      userId: '123',\n      stripeUserId: '43234',\n    },\n    {\n      userId: '345',\n      stripeUserId: '27279',\n    },\n  ];\n\n  getUser(getUserRequest: GetUserRequest) {\n    return this.users.find((user) => user.userId === getUserRequest.userId);\n  }\n}\n\n")),(0,a.kt)("h2",{id:"3python"},"3.python"),(0,a.kt)("p",null,"ref : ",(0,a.kt)("a",{parentName:"p",href:"https://medium.com/@arturocuicas/fastapi-and-apache-kafka-4c9e90aab27f"},"https://medium.com/@arturocuicas/fastapi-and-apache-kafka-4c9e90aab27f")),(0,a.kt)("h3",{id:"install"},"install"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'pip3 install fastapi\npip3 install "uvicorn[standard]"\npip3 install aiokafka    \n\n// \uc2e4\ud589\npython3 -m uvicorn main:app --reload --port 5050\n')),(0,a.kt)("h3",{id:"mainpy"},"main.py"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},'from typing import Union\nimport asyncio\nimport json\nimport os\nfrom typing import List\nfrom random import shuffle\nfrom aiokafka import AIOKafkaConsumer, AIOKafkaProducer\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\nloop = asyncio.get_event_loop()\n\n# deserilizer\ndef encode_json(msg):\n    to_load = msg.value.decode("utf-8")\n    return json.loads(to_load)\n\n\n# handler\nasync def handle_order_created(msg):\n    print(">>handle_order_created", msg)\n    jsonMessage = encode_json(msg)\n    print(">>value", jsonMessage)\n\n    print(">>orderId", jsonMessage["orderId"])\n    print(">>userId", jsonMessage["userId"])\n    print(">>price", jsonMessage["price"])\n\n# \uc561\uc158 \ub9ac\uc2a4\ud2b8\nkafka_actions = {\n    "order_created": handle_order_created,\n}\n\n\n# loop\ub97c \ub3cc\uba74\uc11c \uba54\uc2dc\uc9c0\uac00 \ub4e4\uc5b4\uc624\uba74 \ucc98\ub9ac\ud55c\ub2e4.\nasync def consume():\n    consumer = AIOKafkaConsumer(\n        "order_created",\n        loop=loop,\n        bootstrap_servers=\'localhost:10000,localhost:10001,localhost:10002\',\n        group_id="my-group"\n    )\n    try:\n        await consumer.start()\n    except Exception as e:\n        print(e)\n        return\n    try:\n        async for msg in consumer:\n            print(">>message income", msg)\n            # \ud1a0\ud53d\ubcc4\ub85c \uba54\uc2dc\uc9c0 \ucc98\ub9ac\ud558\ub294 \uc561\uc158\uc744 \ud638\ucd9c \n            await kafka_actions[msg.topic](msg)\n    finally:\n        await consumer.stop()\n\nasyncio.create_task(consume())\n\n# \uc544\ub798 api\ub294 \ucee4\uc288\uba38\uc640 \uad00\ub828\uc740 \uc5c6\ub2e4.\n@app.get("/")\nasync def read_root():\n    return {"Hello": "World"}\n\n\n@app.get("/items/{item_id}")\nasync def read_item(item_id: int, q: Union[str, None] = None):\n    return {"item_id": item_id, "q": q}\n\n# python3 -m uvicorn main:app --reload --port 5050\n\n')),(0,a.kt)("h2",{id:"ref"},"ref"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=JJEKPqSlXvk"},"https://www.youtube.com/watch?v=JJEKPqSlXvk"),"\n",(0,a.kt)("a",{parentName:"p",href:"https://medium.com/@arturocuicas/fastapi-and-apache-kafka-4c9e90aab27f"},"https://medium.com/@arturocuicas/fastapi-and-apache-kafka-4c9e90aab27f")),(0,a.kt)("p",null,"more",(0,a.kt)("br",{parentName:"p"}),"\n",(0,a.kt)("a",{parentName:"p",href:"https://docs.nestjs.com/microservices/kafka#client"},"https://docs.nestjs.com/microservices/kafka#client"),"\n",(0,a.kt)("a",{parentName:"p",href:"https://velog.io/@anjinwoong/Nest.js-Kafka-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0"},"https://velog.io/@anjinwoong/Nest.js-Kafka-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0"),"\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/mguay22/nestjs-kafka-microservices"},"https://github.com/mguay22/nestjs-kafka-microservices")))}d.isMDXComponent=!0},61129:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/img14-c0170f848c829dd6f78784d689311469.png"}}]);