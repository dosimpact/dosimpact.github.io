"use strict";(self.webpackChunkdosimpact_blog=self.webpackChunkdosimpact_blog||[]).push([[57300],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>h});var o=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=o.createContext({}),d=function(e){var n=o.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},l=function(e){var n=d(e.components);return o.createElement(c.Provider,{value:n},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},m=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=d(t),m=r,h=p["".concat(c,".").concat(m)]||p[m]||u[m]||a;return t?o.createElement(h,i(i({ref:n},l),{},{components:t})):o.createElement(h,i({ref:n},l))}));function h(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=m;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s[p]="string"==typeof e?e:r,i[1]=s;for(var d=2;d<a;d++)i[d]=t[d];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},35694:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var o=t(87462),r=(t(67294),t(3905));const a={sidebar_position:9},i="Docker & Node.js",s={unversionedId:"g-devops/docker/docker-template/dt9-node",id:"g-devops/docker/docker-template/dt9-node",title:"Docker & Node.js",description:"verdaccio with docker",source:"@site/docs/g-devops/1-docker/2-docker-template/dt9-node.md",sourceDirName:"g-devops/1-docker/2-docker-template",slug:"/g-devops/docker/docker-template/dt9-node",permalink:"/docs/g-devops/docker/docker-template/dt9-node",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/g-devops/1-docker/2-docker-template/dt9-node.md",tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9},sidebar:"devOps",previous:{title:"Redis Cluster",permalink:"/docs/g-devops/docker/docker-template/dt8-redis"},next:{title:"kafka with docker",permalink:"/docs/g-devops/docker/docker-template/dt10-kafka"}},c={},d=[{value:"verdaccio with docker",id:"verdaccio-with-docker",level:2},{value:"1. open verdaccio server",id:"1-open-verdaccio-server",level:3},{value:"2. publish module",id:"2-publish-module",level:3},{value:"3. download module",id:"3-download-module",level:3}],l={toc:d},p="wrapper";function u(e){let{components:n,...t}=e;return(0,r.kt)(p,(0,o.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"docker--nodejs"},"Docker & Node.js"),(0,r.kt)("h2",{id:"verdaccio-with-docker"},"verdaccio with docker"),(0,r.kt)("p",null,"verdaccio \ub97c \ub3c4\ucee4\ub85c \ub9cc\ub4e4\uc5b4 \ubcf4\uace0, npm \ubaa8\ub4c8\uc744 \uc5c5\ub85c\ub4dc/\ub2e4\uc6b4\ub85c\ub4dc \ud558\ub294 \uc628\ubcf4\ub529 \uac00\uc774\ub4dc"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#docker--nodejs"},"Docker \\& Node.js"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#verdaccio-with-docker"},"verdaccio with docker"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#1-open-verdaccio-server"},"1. open verdaccio server")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#2-publish-module"},"2. publish module")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#3-download-module"},"3. download module"))))))),(0,r.kt)("h3",{id:"1-open-verdaccio-server"},"1. open verdaccio server"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'# 1. docker-compose.yml\n\n---\n#docker-compose.yml\nversion: \'3.1\'\n\nservices:\n  verdaccio:\n    image: verdaccio/verdaccio\n    container_name: \'verdaccio\'\n    networks:\n      - node-network\n    environment:\n      - VERDACCIO_PORT=4873\n    ports:\n      - \'4873:4873\'\n    volumes:\n      - \'./storage:/verdaccio/storage\'\n      - \'./conf:/verdaccio/conf\'\n      - \'./plugins:/verdaccio/plugins\'\nnetworks:\n  node-network:\n    driver: bridge\n---\n\n# 2. make conf file\n\n---\n./conf/config.yaml\n# https://github.com/verdaccio/verdaccio/blob/5.x/conf/docker.yaml\n# This is the default configuration file. It allows all users to do anything,\n# please read carefully the documentation and best practices to\n# improve security.\n#\n# Do not configure host and port under `listen` in this file\n# as it will be ignored when using docker.\n# see https://verdaccio.org/docs/en/docker#docker-and-custom-port-configuration\n#\n# Look here for more config file examples:\n# https://github.com/verdaccio/verdaccio/tree/5.x/conf\n#\n# Read about the best practices\n# https://verdaccio.org/docs/best\n\n# path to a directory with all packages\nstorage: /verdaccio/storage/data\n# path to a directory with plugins to include\nplugins: /verdaccio/plugins\n\n# https://verdaccio.org/docs/webui\nweb:\n  title: Verdaccio\n  # comment out to disable gravatar support\n  # gravatar: false\n  # by default packages are ordercer ascendant (asc|desc)\n  # sort_packages: asc\n  # convert your UI to the dark side\n  # darkMode: true\n  # html_cache: true\n  # by default all features are displayed\n  # login: true\n  # showInfo: true\n  # showSettings: true\n  # In combination with darkMode you can force specific theme\n  # showThemeSwitch: true\n  # showFooter: true\n  # showSearch: true\n  # showRaw: true\n  # showDownloadTarball: true\n  #  HTML tags injected after manifest <scripts/>\n  # scriptsBodyAfter:\n  #    - \'<script type="text/javascript" src="https://my.company.com/customJS.min.js"><\/script>\'\n  #  HTML tags injected before ends </head>\n  #  metaScripts:\n  #    - \'<script type="text/javascript" src="https://code.jquery.com/jquery-3.5.1.slim.min.js"><\/script>\'\n  #    - \'<script type="text/javascript" src="https://browser.sentry-cdn.com/5.15.5/bundle.min.js"><\/script>\'\n  #    - \'<meta name="robots" content="noindex" />\'\n  #  HTML tags injected first child at <body/>\n  #  bodyBefore:\n  #    - \'<div id="myId">html before webpack scripts</div>\'\n  #  Public path for template manifest scripts (only manifest)\n  #  publicPath: http://somedomain.org/\n\n# https://verdaccio.org/docs/configuration#authentication\nauth:\n  htpasswd:\n    file: /verdaccio/storage/htpasswd\n    # Maximum amount of users allowed to register, defaults to "+infinity".\n    # You can set this to -1 to disable registration.\n    # max_users: 1000\n    # Hash algorithm, possible options are: "bcrypt", "md5", "sha1", "crypt".\n    # algorithm: bcrypt # by default is crypt, but is recommended use bcrypt for new installations\n    # Rounds number for "bcrypt", will be ignored for other algorithms.\n    # rounds: 10\n\n# https://verdaccio.org/docs/configuration#uplinks\n# a list of other known repositories we can talk to\nuplinks:\n  npmjs:\n    url: https://registry.npmjs.org/\n\n# Learn how to protect your packages\n# https://verdaccio.org/docs/protect-your-dependencies/\n# https://verdaccio.org/docs/configuration#packages\npackages:\n  \'@*/*\':\n    # scoped packages\n    access: $all\n    publish: $authenticated\n    unpublish: $authenticated\n    proxy: npmjs\n\n  \'**\':\n    # allow all users (including non-authenticated users) to read and\n    # publish all packages\n    #\n    # you can specify usernames/groupnames (depending on your auth plugin)\n    # and three keywords: "$all", "$anonymous", "$authenticated"\n    access: $all\n\n    # allow all known users to publish/publish packages\n    # (anyone can register by default, remember?)\n    publish: $authenticated\n    unpublish: $authenticated\n\n    # if package is not available locally, proxy requests to \'npmjs\' registry\n    proxy: npmjs\n\n# To improve your security configuration and  avoid dependency confusion\n# consider removing the proxy property for private packages\n# https://verdaccio.org/docs/best#remove-proxy-to-increase-security-at-private-packages\n\n# https://verdaccio.org/docs/configuration#server\n# You can specify HTTP/1.1 server keep alive timeout in seconds for incoming connections.\n# A value of 0 makes the http server behave similarly to Node.js versions prior to 8.0.0, which did not have a keep-alive timeout.\n# WORKAROUND: Through given configuration you can workaround following issue https://github.com/verdaccio/verdaccio/issues/301. Set to 0 in case 60 is not enough.\nserver:\n  keepAliveTimeout: 60\n  # Allow `req.ip` to resolve properly when Verdaccio is behind a proxy or load-balancer\n  # See: https://expressjs.com/en/guide/behind-proxies.html\n  # trustProxy: \'127.0.0.1\'\n\n# https://verdaccio.org/docs/configuration#offline-publish\n# publish:\n#   allow_offline: false\n\n# https://verdaccio.org/docs/configuration#url-prefix\n# url_prefix: /verdaccio/\n# VERDACCIO_PUBLIC_URL=\'https://somedomain.org\';\n# url_prefix: \'/my_prefix\'\n# // url -> https://somedomain.org/my_prefix/\n# VERDACCIO_PUBLIC_URL=\'https://somedomain.org\';\n# url_prefix: \'/\'\n# // url -> https://somedomain.org/\n# VERDACCIO_PUBLIC_URL=\'https://somedomain.org/first_prefix\';\n# url_prefix: \'/second_prefix\'\n# // url -> https://somedomain.org/second_prefix/\'\n\n# https://verdaccio.org/docs/configuration#security\n# security:\n#   api:\n#     legacy: true\n#     jwt:\n#       sign:\n#         expiresIn: 29d\n#       verify:\n#         someProp: [value]\n#    web:\n#      sign:\n#        expiresIn: 1h # 1 hour by default\n#      verify:\n#         someProp: [value]\n\n# https://verdaccio.org/docs/configuration#user-rate-limit\n# userRateLimit:\n#   windowMs: 50000\n#   max: 1000\n\n# https://verdaccio.org/docs/configuration#max-body-size\n# max_body_size: 10mb\n\n# https://verdaccio.org/docs/configuration#listen-port\n# listen:\n# - localhost:4873            # default value\n# - http://localhost:4873     # same thing\n# - 0.0.0.0:4873              # listen on all addresses (INADDR_ANY)\n# - https://example.org:4873  # if you want to use https\n# - "[::1]:4873"                # ipv6\n# - unix:/tmp/verdaccio.sock    # unix socket\n\n# The HTTPS configuration is useful if you do not consider use a HTTP Proxy\n# https://verdaccio.org/docs/configuration#https\n# https:\n#   key: ./path/verdaccio-key.pem\n#   cert: ./path/verdaccio-cert.pem\n#   ca: ./path/verdaccio-csr.pem\n\n# https://verdaccio.org/docs/configuration#proxy\n# http_proxy: http://something.local/\n# https_proxy: https://something.local/\n\n# https://verdaccio.org/docs/configuration#notifications\n# notify:\n#   method: POST\n#   headers: [{ "Content-Type": "application/json" }]\n#   endpoint: https://usagge.hipchat.com/v2/room/3729485/notification?auth_token=mySecretToken\n#   content: \'{"color":"green","message":"New package published: * {{ name }}*","notify":true,"message_format":"text"}\'\n\nmiddlewares:\n  audit:\n    enabled: true\n\n# https://verdaccio.org/docs/logger\n# log settings\nlog: { type: stdout, format: pretty, level: http }\n#experiments:\n#  # support for npm token command\n#  token: false\n#  # enable tarball URL redirect for hosting tarball with a different server, the tarball_url_redirect can be a template string\n#  tarball_url_redirect: \'https://mycdn.com/verdaccio/${packageName}/${filename}\'\n#  # the tarball_url_redirect can be a function, takes packageName and filename and returns the url, when working with a js configuration file\n#  tarball_url_redirect(packageName, filename) {\n#    const signedUrl = // generate a signed url\n#    return signedUrl;\n#  }\n\n# translate your registry, api i18n not available yet\n# i18n:\n# list of the available translations https://github.com/verdaccio/verdaccio/blob/master/packages/plugins/ui-theme/src/i18n/ABOUT_TRANSLATIONS.md\n#   web: en-US\n\n---\n\n# 3.\ndocker compose up -d\ndocker compose down\n\n# 4. check permission\n\nsudo chown -R 10001:65533 ./storage\nsudo chown -R 10001:65533 ./conf\nsudo chown -R 10001:65533 ./plugins\n# ---\nsudo chmod -R 777 ./storage\nsudo chmod -R 777 ./conf\nsudo chmod -R 777 ./plugins\n\n\n# 5. add user\nnpm adduser --registry http://0.0.0.0:4873/\n\n')),(0,r.kt)("h3",{id:"2-publish-module"},"2. publish module"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'# 0. adduser\nnpm adduser --registry http://0.0.0.0:4873/\n\n# 1. login \nnpm login --registry http://0.0.0.0:4873/  \n\n# 1.1 \n# \ub85c\uadf8\uc778 \ud655\uc778 \ubc29\ubc95  \ncat ~/.npmrc  \n\n//0.0.0.0:4873/:_authToken="gCD0KDZ0JkBE7QuXIV/Cvg=="  \n# auth\ud1a0\ud070\uc774 \uc788\ub2e4. id+pw\uac00 base64 \uc778\ucf54\ub529 \ub41c\uac83  \n# //\ub294 \uc8fc\uc11d\uc774 \uc544\ub2c8\ub2e4. \ud2b9\uc815 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \ub300\ud55c \uc124\uc815\uc744 \uc9c0\uc815\ud55c\uac83  \n# \ub85c\uceec\ud504\ub85c\uc81d\ud2b8\uc758 .npmrc \uadf8\ub9ac\uace0  ~/.npmrc \uc815\ubcf4\ub97c \ubaa8\ub450 \uc77d\ub294\ub2e4.  \n\n\n# 2. publish\n\n# 2.1 .npmignore\n---\n# .npmignore\nnode_modules\ntests\n---\n\n# 2.2 package.json \n---\n{\n  "name": "@my-test/example-upload",\n  "version": "1.0.0",\n  "description": "test module sample",\n  "main": "index.js",\n  "scripts": {\n    "test": "echo \\"Error: no test specified\\" && exit 1"\n  },\n  "keywords": [],\n  "author": "tester",\n  "license": "ISC"\n}\n\n# name : \ud328\ud0a4\uc9c0 \uc774\ub984  \n# version : \ud328\ud0a4\uc9c0 \ubc84\uc804 (\ud328\uce58 \ud6c4 publish) \n# description : \uc124\uba85 (ui\ud45c\uae30\ub428)   \n# author : \uc791\uc131\uc790 (ui\ud45c\uae30\ub428)  \n---\n\n# 2.3 index.js\n---\nfunction HelloWorld() {\n    return "Hello World";\n}\n\nmodule.exports = HelloWorld;\n---\n\n# 2. upsert module\nnpm publish --registry http://0.0.0.0:4873/\n\n#4. delete module\nnpm unpublish --force verdaccio-onboarding--registry http://0.0.0.0:4873/\n')),(0,r.kt)("h3",{id:"3-download-module"},"3. download module"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"\n#1 .npmrc\n---\nregistry=http://0.0.0.0:4873/\nfund=false\n---\n\n#2. \nnpm install @my-test/example-upload\n\n")))}u.isMDXComponent=!0}}]);