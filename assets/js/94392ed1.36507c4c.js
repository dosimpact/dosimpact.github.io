"use strict";(self.webpackChunkdosimpact_blog=self.webpackChunkdosimpact_blog||[]).push([[33563],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),i=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=i(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=i(n),m=a,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||o;return n?r.createElement(f,l(l({ref:t},u),{},{components:n})):r.createElement(f,l({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[p]="string"==typeof e?e:a,l[1]=s;for(var i=2;i<o;i++)l[i]=n[i];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},23686:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>i});var r=n(87462),a=(n(67294),n(3905));const o={sidebar_position:1},l="jest \uc815\ub9ac",s={unversionedId:"g-fe/testing/js-test/test01",id:"g-fe/testing/js-test/test01",title:"jest \uc815\ub9ac",description:"- jest \uc815\ub9ac",source:"@site/docs/g-fe/7-testing/0-js-test/test01.md",sourceDirName:"g-fe/7-testing/0-js-test",slug:"/g-fe/testing/js-test/test01",permalink:"/docs/g-fe/testing/js-test/test01",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/g-fe/7-testing/0-js-test/test01.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"frontEnd",previous:{title:"JS Testing",permalink:"/docs/category/js-testing"},next:{title:"React Testing",permalink:"/docs/category/react-testing"}},c={},i=[{value:"Install",id:"install",level:2},{value:"01.\ucf54\ub4dc \uc804\ud6c4\uc5d0 \ud544\uc694\ud55c \ucf54\ub4dc\ub97c \uc791\uc131\ud560 \uc218 \uc788\ub2e4",id:"01\ucf54\ub4dc-\uc804\ud6c4\uc5d0-\ud544\uc694\ud55c-\ucf54\ub4dc\ub97c-\uc791\uc131\ud560-\uc218-\uc788\ub2e4",level:2},{value:"02.Matcher",id:"02matcher",level:2},{value:"03.Matcher",id:"03matcher",level:2}],u={toc:i},p="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"jest-\uc815\ub9ac"},"jest \uc815\ub9ac"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#jest-%EC%A0%95%EB%A6%AC"},"jest \uc815\ub9ac"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#install"},"Install")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#01%EC%BD%94%EB%93%9C-%EC%A0%84%ED%9B%84%EC%97%90-%ED%95%84%EC%9A%94%ED%95%9C-%EC%BD%94%EB%93%9C%EB%A5%BC-%EC%9E%91%EC%84%B1%ED%95%A0-%EC%88%98-%EC%9E%88%EB%8B%A4"},"01.\ucf54\ub4dc \uc804\ud6c4\uc5d0 \ud544\uc694\ud55c \ucf54\ub4dc\ub97c \uc791\uc131\ud560 \uc218 \uc788\ub2e4")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#02matcher"},"02.Matcher")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#03matcher"},"03.Matcher"))))),(0,a.kt)("h2",{id:"install"},"Install"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"yarn init -y  \nyarn add jest -D  \nnpx jest 01.test.js\n\n")),(0,a.kt)("p",null,"1.Mocking\n2.Assertion "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"expect",(0,a.kt)("br",{parentName:"li"}),"3.Matcher"),(0,a.kt)("li",{parentName:"ul"},"toBe  ")),(0,a.kt)("ol",{start:4},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"\ubaa8\ud0b9"),": Jest\ub294 \ud568\uc218\uc758 \ubaa8\ud0b9\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. ",(0,a.kt)("inlineCode",{parentName:"li"},"jest.fn()"),"\uc744 \uc0ac\uc6a9\ud558\uc5ec \ubaa8\ud0b9 \ud568\uc218\ub97c \uc0dd\uc131\ud558\uace0, ",(0,a.kt)("inlineCode",{parentName:"li"},"mockReturnValue")," \ub610\ub294 ",(0,a.kt)("inlineCode",{parentName:"li"},"mockImplementation"),"\uc744 \uc0ac\uc6a9\ud558\uc5ec \ubaa8\ud0b9 \ud568\uc218\uc758 \ub3d9\uc791\uc744 \uc815\uc758\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"const mockFn = jest.fn();\nmockFn.mockReturnValue('mock value');\n")),(0,a.kt)("ol",{start:6},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"\ube44\ub3d9\uae30 \ud14c\uc2a4\ud305"),": Jest\ub294 \ube44\ub3d9\uae30 \ucf54\ub4dc\uc758 \ud14c\uc2a4\ud305\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. ",(0,a.kt)("inlineCode",{parentName:"li"},"async/await")," \ub610\ub294 ",(0,a.kt)("inlineCode",{parentName:"li"},"done")," \ucf5c\ubc31\uc744 \uc0ac\uc6a9\ud558\uc5ec \ube44\ub3d9\uae30 \ud14c\uc2a4\ud2b8\ub97c \uc791\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"test('async test', async () => {\n  const data = await fetchData();\n  expect(data).toBe('expected data');\n});\n")),(0,a.kt)("ol",{start:7},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"\uc124\uc815"),": Jest\ub294 \ub2e4\uc591\ud55c \uc124\uc815 \uc635\uc158\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. ",(0,a.kt)("inlineCode",{parentName:"li"},"jest.config.js")," \ud30c\uc77c\uc744 \uc0dd\uc131\ud558\uc5ec Jest\uc758 \ub3d9\uc791\uc744 \ucee4\uc2a4\ud130\ub9c8\uc774\uc988\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"01\ucf54\ub4dc-\uc804\ud6c4\uc5d0-\ud544\uc694\ud55c-\ucf54\ub4dc\ub97c-\uc791\uc131\ud560-\uc218-\uc788\ub2e4"},"01.\ucf54\ub4dc \uc804\ud6c4\uc5d0 \ud544\uc694\ud55c \ucf54\ub4dc\ub97c \uc791\uc131\ud560 \uc218 \uc788\ub2e4"),(0,a.kt)("p",null,"test case vs suite "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"test case : \uac01\uac01\uc758 \ud14c\uc2a4\ud2b8 \ubaa8\ub4c8 - test \ud568\uc218\ub97c \uc774\uc6a9  "),(0,a.kt)("li",{parentName:"ul"},"test suite : test case\ub97c \uad00\uacc4\ubcc4\ub85c \ubb36\uc5b4\ub193\uc740 \uac83 - describe \ud568\uc218\ub97c \uc774\uc6a9  "),(0,a.kt)("li",{parentName:"ul"},"test procedure : test case\uc640 test suite\ub97c \ud14c\uc2a4\ud305 \uc2dc\ub098\ub9ac\uc624\uc5d0 \ub9de\uac8c \ub3d9\uc791\ud558\ub3c4\ub85d \ub9cc\ub4e4\uc5b4 \ub193\uc740 \uc2a4\ud06c\ub9bd\ud2b8")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-md"},"\uaddc\uce59 - before/after-All\uc740 Each\ub97c \uac10\uc2fc\ub2e4.\n\uaddc\uce59 - outterEach\ub294 innerEach\ub97c \uac10\uc2fc\ub2e4.\n\uc21c\uc11c - beforeAll(Outter) - beforeAll(Inner) - * -  afterAll(Inner) - afterAll(Outter)\n  * = beforeEach(Outter) - beforeEach(Inner) - test -  afterEach(Inner) - afterEach(Outter)\n\nbeforeAll (Outter)\n  beforeAll (Inner)\n    beforeEach (Outter)\n      beforeEach (Inner)\n          test()\n      afterEach (Inner)\n    afterEach (Outter)\n  afterAll (Inner)\nafterAll (Outter)\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'beforeAll(() => {\n  console.log("outter beforeAll");\n});\nafterAll(() => {\n  console.log("outter afterAll");\n});\n\nbeforeEach(() => {\n  console.log("outter beforeEach");\n});\nafterEach(() => {\n  console.log("outter afterEach");\n});\n\ndescribe("inner test", () => {\n  let counter = 0;\n\n  beforeAll(() => {\n    console.log("inner beforeAll");\n    counter = 0;\n  });\n  afterAll(() => {\n    console.log("inner afterAll");\n    counter = -1;\n  });\n\n  beforeEach(() => {\n    console.log("inner beforeEach");\n    counter += 1;\n  });\n\n  afterEach(() => {\n    console.log("inner afterEach");\n    console.log("done #", counter);\n  });\n\n  test(`inner test #${counter}`, () => {\n    expect(0).toBe(0);\n    console.log("counter", counter);\n  });\n\n});\n')),(0,a.kt)("h2",{id:"02matcher"},"02.Matcher"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"tobe, not.tobe"),(0,a.kt)("li",{parentName:"ul"},"tobe"),(0,a.kt)("li",{parentName:"ul"},"toEqual"),(0,a.kt)("li",{parentName:"ul"},"toStrictEqual"),(0,a.kt)("li",{parentName:"ul"},"toBeNull"),(0,a.kt)("li",{parentName:"ul"},"toBeUndefined"),(0,a.kt)("li",{parentName:"ul"},"toBeDefined"),(0,a.kt)("li",{parentName:"ul"},"toBeTruthy"),(0,a.kt)("li",{parentName:"ul"},"toBeFalsy"),(0,a.kt)("li",{parentName:"ul"},"toBeGreaterThan"),(0,a.kt)("li",{parentName:"ul"},"toBeGreaterThanOrEqual"),(0,a.kt)("li",{parentName:"ul"},"toBeLessThan"),(0,a.kt)("li",{parentName:"ul"},"toBeLessThanOrEqual"),(0,a.kt)("li",{parentName:"ul"},"toBeCloseTo  ")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"//fn.js\nconst add = (a, b) => a + b;\n\nconst makeUser = (name, age) => ({\n  name,\n  age,\n  gender: undefined,\n});\n\nmodule.exports = {\n  add,\n  makeUser,\n};\n\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'\nconst fn = require("./fn");\n\n// tobe, not.tobe\ndescribe("matcher 01 - primitive type ", () => {\n  test("1 tobe 1", () => {\n    expect(1).toBe(1);\n  });\n  test("1+2 tobe 3", () => {\n    expect(fn.add(1, 2)).toBe(3);\n  });\n  test("1+2 not tobe 5", () => {\n    expect(fn.add(1, 2)).not.toBe(5);\n  });\n});\n\n// tobe\n// toEqual\n// toStrictEqual\ndescribe("matcher 02 - object", () => {\n  let goalUser;\n  beforeAll(() => {\n    goalUser = { name: "dodo", age: 20 };\n  });\n  //\u2705 \uac1d\uccb4\ub97c \ube44\uad50\ud560\ub54c\ub294, \ud504\ub85c\ud37c\ud2f0\uae4c\uc9c0 \uac19\uc740\uc9c0 \ubd10\uc57c \ud558\ubbc0\ub85c , toEqual\uc744 \uc0ac\uc6a9\ud55c\ub2e4.\n  // - \ud558\uc9c0\ub9cc undefiend (\ucd08\uae30\uc120\uc5b8\uc0c1\ud0dc)\uc758 \ud504\ub85c\ud37c\ud2f0\ub294 \uac80\uc0ac \uc81c\uc678\n  test("object not tobe (diff addr)", () => {\n    expect(fn.makeUser("dodo", 20)).not.toBe(goalUser);\n  });\n\n  // \u2705 \ubd84\uba85 \ud504\ub85c\ud37c\ud2f0 \uc911 key:undfined \uac00 \uc788\ub294\ub370 \ud14c\uc2a4\ud2b8 \ud1b5\uacfc \ub41c\ub2e4.\n  // - \ub2e8,null\uc740 \uac80\uc0ac\ub97c \ud55c\ub2e4. (\uc758\ub3c4\uc801 \ube48 \uac12)\n  test("object toEqual (deep equality)", () => {\n    expect(fn.makeUser("dodo", 20)).toEqual(goalUser);\n  });\n\n  // \u2705 undefined \ud504\ub85c\ud37c\ud2f0\uae4c\uc9c0 \uc77c\uce58\ud558\ub294\uc9c0 \ud655\uc778\ud560\ub550 toStrictEqual\n  test("object toEqual (deep equality)", () => {\n    expect(fn.makeUser("dodo", 20)).not.toStrictEqual(goalUser);\n  });\n});\n\n// toBeNull\n// toBeUndefined\n// toBeDefined\ndescribe("matcher 03 ", () => {\n  test("null toBeNull", () => {\n    expect(null).toBeNull();\n  });\n  test("undefined toBeUndefined", () => {\n    expect(undefined).toBeUndefined();\n  });\n  test("defined toBeDefined", () => {\n    //\u2705 null \uc740 \uac1d\uccb4\uc774\uace0, \uac12\uc5d0 \uc815\uc758\uac00 \ub418\uc5b4\uc838 \uc788\ub294 \uc0c1\ud0dc\n    expect(null).toBeDefined();\n    expect(undefined).not.toBeDefined();\n  });\n});\n\n// toBeTruthy\n// toBeFalsy\ndescribe("matcher 04 ", () => {\n  test("toBeTruthy", () => {\n    expect(true).toBeTruthy();\n    expect([]).toBeTruthy();\n    expect({}).toBeTruthy();\n  });\n  test("toBeTruthy", () => {\n    expect(false).toBeFalsy();\n    expect("").toBeFalsy();\n    expect(!!false).toBeFalsy();\n    expect(!!undefined).toBeFalsy();\n    expect(!!null).toBeFalsy();\n  });\n});\n\n// toBeGreaterThan\n// toBeGreaterThanOrEqual\n// toBeLessThan\n// toBeLessThanOrEqual\n// toBeCloseTo\ndescribe("matcher 05", () => {\n  test("10 > 3", () => {\n    expect(10).toBeGreaterThan(3);\n  });\n  test("10 >= 3", () => {\n    expect(10).toBeGreaterThanOrEqual(3);\n  });\n  test("3 < 10 ", () => {\n    expect(3).toBeLessThan(10);\n  });\n  test("3 <= 10 ", () => {\n    expect(3).toBeLessThanOrEqual(10);\n  });\n  test("3.1 + 7.0 ~~= 10.1", () => {\n    expect(0.1 + 0.2).not.toBe(0.3);\n    expect(0.1 + 0.2).toBeCloseTo(0.3);\n  });\n});\n\n')),(0,a.kt)("h2",{id:"03matcher"},"03.Matcher"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"toMatch"),(0,a.kt)("li",{parentName:"ul"},"toContain"),(0,a.kt)("li",{parentName:"ul"},"toThrow"),(0,a.kt)("li",{parentName:"ul"},"\ube44\ub3d9\uae30 1 - \ucf5c\ubc31"),(0,a.kt)("li",{parentName:"ul"},"\ube44\ub3d9\uae30 2 - Promise then,catch"),(0,a.kt)("li",{parentName:"ul"},"resolves,rejects"),(0,a.kt)("li",{parentName:"ul"},"\ube44\ub3d9\uae30 3 - async,await")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'const fn = require("./fn");\n\n// toMatch\ndescribe("matcher 01 - RegExpress ", () => {\n  test("startwith H", () => {\n    expect("Hell world").toMatch(/^H/);\n  });\n  test("startwith H or h", () => {\n    expect("Hell world").toMatch(/^h/i);\n  });\n});\n\n// toContain\ndescribe("matcher 02 - array", () => {\n  test("[A,B,C] Contain A", () => {\n    expect(["A", "B", "C"]).toContain("A");\n  });\n});\n\n// toThrow\ndescribe("matcher 03 - Error", () => {\n  test("must throw Error", () => {\n    expect(() => {\n      throw new Error();\n    }).toThrow();\n  });\n\n  test("must throw Error with Message", () => {\n    expect(() => {\n      throw new Error("Message");\n    }).toThrow("Message");\n  });\n});\n\n// \ube44\ub3d9\uae30 1 - \ucf5c\ubc31\ndescribe("matcher 04 - callback", () => {\n  const getUser = (cb) => {\n    setTimeout(() => {\n      cb("dodo");\n    }, 500);\n  };\n\n  test("callback eval", (done) => {\n    const callback = (name) => {\n      expect(name).toBe("dodo");\n      done();\n    };\n    // \u2705 \ucf5c\ubc31\ud568\uc218\ub97c \uc4f4\ub2e4\uba74 done\uc73c\ub85c \ud14c\uc2a4\ud2b8\uc885\ub8cc\ub97c \uba85\uc2dc\ud560 \uac83\n    getUser(callback);\n  });\n});\n\n// \ube44\ub3d9\uae30 2 - Promise then,catch\n// resolves\n// rejects\n\n//\u274c https://ko.javascript.info/promise-error-handling\n// -- Promise\uc548\uc758 setTimeout\uc758 \uc560\ub7ec\ub294 \ubabb\uc7a1\ub294\ub2e4,\n// -- \uc560\ub7ec\ub294 executor(\uc2e4\ud589\uc790, \uc2e4\ud589 \ud568\uc218)\uac00 \uc2e4\ud589\ub418\ub294 \ub3d9\uc548\uc774 \uc544\ub2c8\ub77c \ub098\uc911\uc5d0 \ubc1c\uc0dd\ud569\ub2c8\ub2e4.\n// -- \ub530\ub77c\uc11c \ud504\ub77c\ubbf8\uc2a4\ub294 \uc5d0\ub7ec\ub97c \ucc98\ub9ac\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.\n\ndescribe("matcher 05 - Promise", () => {\n  const getUser = async () =>\n    new Promise((res, rej) => {\n      setTimeout(() => {\n        res("dodo");\n      }, 500);\n    });\n\n  test("Promise return then", () => {\n    // return expect(getUser()).toBe("dodo");\n    // \u2705 \ubc18\ub4dc\uc2dc (Promise).then.catch \ub97c \ub9ac\ud134\ud558\ub3c4\ub85d \ud574\uc57c \uac80\uc0ac\ub41c\ub2e4.\n    return getUser().then((name) => {\n      expect(name).toBe("dodo");\n    });\n  });\n\n  test("Promise resolves dodo", () => {\n    expect(Promise.resolve("dodo")).resolves.toBe("dodo");\n  });\n\n  test("Promise rejects korea", () => {\n    expect(Promise.reject("korea")).rejects.toBe("korea");\n  });\n\n  test("rejects to octopus", () => {\n    return expect(Promise.reject(new Error("octopus"))).rejects.toThrow(\n      "octopus"\n    );\n  });\n});\n\n// \ube44\ub3d9\uae30 3 - async,await\ndescribe("matcher 06 - async,await", () => {\n  const getUser = async () =>\n    new Promise((res, rej) => {\n      res("dodo");\n    });\n  test("async result is dodo", async () => {\n    const res = await getUser();\n    expect(res).toBe("dodo");\n  });\n});\n\n')))}d.isMDXComponent=!0}}]);