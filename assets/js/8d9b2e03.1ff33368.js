"use strict";(self.webpackChunkdosimpact_blog=self.webpackChunkdosimpact_blog||[]).push([[37930],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),u=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=u(e.components);return r.createElement(s.Provider,{value:n},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},y=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=u(t),y=a,m=c["".concat(s,".").concat(y)]||c[y]||d[y]||i;return t?r.createElement(m,o(o({ref:n},p),{},{components:t})):r.createElement(m,o({ref:n},p))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=y;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[c]="string"==typeof e?e:a,o[1]=l;for(var u=2;u<i;u++)o[u]=t[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}y.displayName="MDXCreateElement"},89339:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var r=t(87462),a=(t(67294),t(3905));const i={sidebar_position:10},o="React-Query with Next.js SSR",l={unversionedId:"g-fe/next/basic/next10-react-query",id:"g-fe/next/basic/next10-react-query",title:"React-Query with Next.js SSR",description:"- React-Query with Next.js SSR",source:"@site/docs/g-fe/5-next/3-basic/next10-react-query.md",sourceDirName:"g-fe/5-next/3-basic",slug:"/g-fe/next/basic/next10-react-query",permalink:"/docs/g-fe/next/basic/next10-react-query",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/g-fe/5-next/3-basic/next10-react-query.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"frontEnd",previous:{title:"Framer motion",permalink:"/docs/g-fe/next/basic/next8-framer"},next:{title:"next2-6",permalink:"/docs/g-fe/next/basic/next2-6"}},s={},u=[{value:"\ud83d\udccc Install",id:"-install",level:2},{value:"\ud83d\udccc Nextjs Suspense Streaming",id:"-nextjs-suspense-streaming",level:2},{value:"\ud83d\udccc Nextjs App Prefetching",id:"-nextjs-app-prefetching",level:2}],p={toc:u},c="wrapper";function d(e){let{components:n,...t}=e;return(0,a.kt)(c,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"react-query-with-nextjs-ssr"},"React-Query with Next.js SSR"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#react-query-with-nextjs-ssr"},"React-Query with Next.js SSR"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#-install"},"\ud83d\udccc Install")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#-nextjs-suspense-streaming"},"\ud83d\udccc Nextjs Suspense Streaming")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#-nextjs-app-prefetching"},"\ud83d\udccc Nextjs App Prefetching"))))),(0,a.kt)("h2",{id:"-install"},"\ud83d\udccc Install"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"yarn add @tanstack/react-query @tanstack/react-query-devtools @tanstack/react-query-next-experimental\n*\ucd94\ud6c4 experimental \uc774 \ube68\ub9ac \uc0ac\ub77c\uc84c\uc73c\uba74 \ud55c\ub2e4.  \n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'// lib/query/get-query-client.ts\nimport {\n  QueryClient,\n  defaultShouldDehydrateQuery,\n  isServer,\n} from "@tanstack/react-query";\n\nfunction makeQueryClient() {\n  return new QueryClient({\n    defaultOptions: {\n      queries: {\n        staleTime: 60 * 1000,\n      },\n      dehydrate: {\n        // include pending queries in dehydration\n        shouldDehydrateQuery: (query) =>\n          defaultShouldDehydrateQuery(query) ||\n          query.state.status === "pending",\n      },\n    },\n  });\n}\n\nlet browserQueryClient: QueryClient | undefined = undefined;\n\nexport function getQueryClient() {\n  if (isServer) {\n    // Server: always make a new query client\n    return makeQueryClient();\n  } else {\n    // Browser: make a new query client if we don\'t already have one\n    // This is very important, so we don\'t re-make a new client if React\n    // suspends during the initial render. This may not be needed if we\n    // have a suspense boundary BELOW the creation of the query client\n    if (!browserQueryClient) browserQueryClient = makeQueryClient();\n    return browserQueryClient;\n  }\n}\n')),(0,a.kt)("p",null,"ReactQueryStreamedHydration"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"This component is responsible for:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"hydrating the query client on the server"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"dehydrating the query client on the server")))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'// app/query-provider.tsx\n"use client";\n\nimport { QueryClientProvider } from "@tanstack/react-query";\nimport { ReactQueryDevtools } from "@tanstack/react-query-devtools";\nimport * as React from "react";\nimport { ReactQueryStreamedHydration } from "@tanstack/react-query-next-experimental";\nimport { getQueryClient } from "@/lib/query/get-query-client";\n\nexport function QueryProviders(props: { children: React.ReactNode }) {\n  const queryClient = getQueryClient();\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <ReactQueryStreamedHydration>\n        {props.children}\n      </ReactQueryStreamedHydration>\n      <ReactQueryDevtools initialIsOpen={false} />\n    </QueryClientProvider>\n  );\n}\n---\nexport default async function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n\n  return (\n    <html lang="en">\n      <body\n        className={`${geistSans.variable} ${geistMono.variable} antialiased`}\n      >\n        <QueryProviders>\n          {children}\n        </QueryProviders>\n      </body>\n    </html>\n  );\n}\n\n')),(0,a.kt)("h2",{id:"-nextjs-suspense-streaming"},"\ud83d\udccc Nextjs Suspense Streaming"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://tanstack.com/query/latest/docs/framework/react/examples/nextjs-suspense-streaming"},"https://tanstack.com/query/latest/docs/framework/react/examples/nextjs-suspense-streaming")),(0,a.kt)("p",null,"\ud750\ub984"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"1.",(0,a.kt)("inlineCode",{parentName:"li"},"useSuspenseQuery")," \uc744 \uc774\uc6a9\ud558\uae30 \uc704\ud574 Suspense \ucef4\ud3ec\ub10c\ud2b8\ub85c \uac10\uc2fc\ub2e4.  "),(0,a.kt)("li",{parentName:"ul"},"2.",(0,a.kt)("inlineCode",{parentName:"li"},"Suspense")," \uc2a4\ud2b8\ub9ac\ubc0d \ub79c\ub354\ub9c1\uc758 \ud50c\ub85c\uc6b0\ub97c \ub530\ub978\ub2e4.  "),(0,a.kt)("li",{parentName:"ul"},"3.React-Query\ub3c4 \uc704 \uc2a4\ud2b8\ub9ac\ubc0d \ub79c\ub354\ub9c1\uc758 \ud50c\ub85c\uc6b0\ub97c \ub530\ub974\uba74\uc11c \ub370\uc774\ud130 \ud328\uce6d \ubc0f \uce90\uc2dc \ub77c\uc774\ud504 \uc2f8\uc774\ud074 \uad00\ub9ac\uac00 \ub41c\ub2e4. ")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'//MyComponent.tsx\n"use client";\nimport { useSuspenseQuery } from "@tanstack/react-query";\nimport { useState } from "react";\n\nfunction useWaitQuery(props: { wait: number }) {\n  const query = useSuspenseQuery({\n    queryKey: ["wait", props.wait],\n    queryFn: async () => {\n      const path = `/api/wait?wait=${props.wait}`;\n      const url = "http://localhost:3000" + path;\n\n      const res: string = await (\n        await fetch(url, {\n          cache: "no-store",\n        })\n      ).json();\n      return res;\n    },\n  });\n\n  return [query.data as string, query] as const;\n}\n\nexport function MyComponent(props: { wait: number }) {\n  const [data] = useWaitQuery(props);\n\n  return <div>result: {data}</div>;\n}\n\nexport function ConditionalShow(props: { children: React.ReactNode }) {\n  const [show, setShow] = useState(false);\n\n  return (\n    <div>\n      {show ? props.children : null}\n      <button onClick={() => setShow(true)}>Show</button>\n    </div>\n  );\n}\n\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'//app/test/query-test/page.tsx\nimport { getQueryClient } from "@/lib/query/get-query-client";\nimport { Suspense } from "react";\nimport { ConditionalShow, MyComponent } from "./components/MyComponent";\nimport { dehydrate, HydrationBoundary } from "@tanstack/react-query";\n\nexport default async function MyPage() {\n  return (\n    <>\n      <MyComponent wait={100} />\n\n      <Suspense fallback={<div>waiting 100....</div>}>\n        <MyComponent wait={100} />\n      </Suspense>\n      <Suspense fallback={<div>waiting 200....</div>}>\n        <MyComponent wait={200} />\n      </Suspense>\n      <Suspense fallback={<div>waiting 300....</div>}>\n        <MyComponent wait={300} />\n      </Suspense>\n      <Suspense fallback={<div>waiting 400....</div>}>\n        <MyComponent wait={400} />\n      </Suspense>\n      <Suspense fallback={<div>waiting 500....</div>}>\n        <MyComponent wait={500} />\n      </Suspense>\n      <Suspense fallback={<div>waiting 600....</div>}>\n        <MyComponent wait={600} />\n      </Suspense>\n      <ConditionalShow>\n          <Suspense fallback={<div>waiting 5000....</div>}>\n            <MyComponent wait={5000} />\n          </Suspense>\n      </ConditionalShow>\n\n      <fieldset>\n        <legend>\n          combined <code>Suspense</code>-container\n        </legend>\n        <Suspense\n          fallback={\n            <>\n              <div>waiting 800....</div>\n              <div>waiting 900....</div>\n              <div>waiting 8000....</div>\n            </>\n          }\n        >\n          <MyComponent wait={800} />\n          <MyComponent wait={900} />\n          <MyComponent wait={8000} />\n        </Suspense>\n      </fieldset>\n    </>\n  );\n}\n')),(0,a.kt)("h2",{id:"-nextjs-app-prefetching"},"\ud83d\udccc Nextjs App Prefetching"),(0,a.kt)("p",null,"\ud750\ub984"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"1.",(0,a.kt)("inlineCode",{parentName:"li"},"const queryClient = getQueryClient();")," \ucffc\ub9ac \ud074\ub77c\uc774\uc5b8\ud2b8\ub97c \uac00\uc838\uc640\uc11c"),(0,a.kt)("li",{parentName:"ul"},"2.",(0,a.kt)("inlineCode",{parentName:"li"},"await queryClient.prefetchQuery")," \ud504\ub9ac\ud328\uce6d\uc744 \ud55c\ub2e4.  "),(0,a.kt)("li",{parentName:"ul"},"3.",(0,a.kt)("inlineCode",{parentName:"li"},"<HydrationBoundary state={dehydrate(queryClient)}>"),"  dehydrate \uc73c\ub85c \uc11c\ubc84 \uc0ac\uc774\ub4dc\uc758 \ub370\uc774\ud130\ud328\uce6d\uc744 \uc7ac\ud65c\uc6a9\ud55c\ub2e4."),(0,a.kt)("li",{parentName:"ul"},"*client-side-query-client\uc5d0 \uc8fc\uc785  "),(0,a.kt)("li",{parentName:"ul"},"\uacb0\uacfc\ub85c waiting 5000 \uc5c6\uc774 \ubc14\ub85c \ub79c\ub354\ub9c1 \ub41c\ub2e4.   "),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("ol",{parentName:"li",start:4},(0,a.kt)("li",{parentName:"ol"},"HydrationBoundary \ubc14\uc6b4\ub354\ub9ac \uc678\uc5d0\uc11c\ub3c4 queryClient\uc758 \ub370\uc774\ud130\ub97c \uc7ac\ud65c\uc6a9 \ud560\uc218 \uc788\ub2e4.  ")))),(0,a.kt)("p",null,"\uc7a5\uc810  "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"SEO\uc5d0 \ub370\uc774\ud130 \ub178\ucd9c\ub428. \uadf8 \ub178\ucd9c\ub41c \ub370\uc774\ud130\ub97c \uc7ac\uc0ac\uc6a9\ud55c\ub2e4.  "),(0,a.kt)("li",{parentName:"ul"},"(prefetch - dehydrate ) \uacfc\uc815\uc774 \uc5c6\ub2e4\uba74 API\ub97c 2\ubc88 \ud638\ucd9c\ud558\uaca0\uc9c0.  ")),(0,a.kt)("p",null,"\uc8fc\uc758  "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"HydrationBoundary")," \uc740 \ub370\uc774\ud130 \uc7ac\ud65c\uc6a9\uc774 \ud544\uc694\ud55c \ubd80\ubd84\ub9cc \uc0ac\uc6a9\ud558\uc790.  "),(0,a.kt)("li",{parentName:"ul"},"RootLayout\uc5d0 ",(0,a.kt)("inlineCode",{parentName:"li"},"HydrationBoundary")," \ub97c \uc0ac\uc6a9\ud55c\ub2e4\uba74 \ubaa8\ub4e0 \ub370\uc774\ud130\uac00 Client\ub85c \ub118\uc5b4\uac00\uac8c \ub41c\ub2e4. \uc774\ub294 SSR\uc758 \uc7a5\uc810\uc744 \uc783\uc5b4\ubc84\ub9ac\uac8c \ub418\ub294 \uc148.   "),(0,a.kt)("li",{parentName:"ul"},"\ub370\uc774\ud130 \uc131\uaca9\uc5d0 \ub530\ub77c\uc11c \uad6c\ubd84\ud558\uc790. ",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"1.\ub370\uc774\ud130 readonly \uacbd\uc6b0, (html\uc5d0 \ubc15\uc81c\ub418\uace0 \ub05d.) -> hydration \ubd88\ud544\uc694.  "),(0,a.kt)("li",{parentName:"ul"},"2.serialized \ub370\uc774\ud130\ub97c \ub2e4\uc2dc deserialized \ud574\uc57c\ud558\ub294 \uacbd\uc6b0 -> hydration \ud544\uc694.  ")))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import { getQueryClient } from "@/lib/query/get-query-client";\nimport { Suspense } from "react";\nimport { ConditionalShow, MyComponent } from "./components/MyComponent";\nimport { dehydrate, HydrationBoundary } from "@tanstack/react-query";\n\nexport default async function MyPage() {\n  const queryClient = getQueryClient();\n\n  await queryClient.prefetchQuery({\n    queryKey: ["wait", 5000],\n    queryFn: async () => {\n      return "waited 5000ms";\n    },\n  });\n\n  return (\n    <>\n      <MyComponent wait={100} />\n        ....\n      <HydrationBoundary state={dehydrate(queryClient)}>\n        <ConditionalShow>\n          <Suspense fallback={<div>waiting 5000....</div>}>\n            <MyComponent wait={5000} />\n          </Suspense>\n        </ConditionalShow>\n      </HydrationBoundary>\n      ...\n    </>\n  );\n}\n')))}d.isMDXComponent=!0}}]);